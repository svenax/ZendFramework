<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 24249 -->
<!-- Reviewed: no -->
<sect3 id="zend.controller.actionhelpers.actionstack">
    <title>ActionStack</title>

    <para>
        Помощник <emphasis>ActionStack</emphasis> позволяет добавлять в стек запросы к плагину
        фронт-контроллера, именуемуму
        <link linkend="zend.controller.plugins.standard.actionstack">ActionStack</link>.
        Это позволяет создать очередь из задач, планируемых к выполнению в ходе данного запроса.
        Помощник <emphasis>ActionStack</emphasis> позволяет добавлять задачи как путем указания
        новых объектов запроса, так и набора действие - контроллер - модуль.
    </para>

    <note>
        <title>Вызов помощника ActionStack инициализирует плагин ActionStack</title>

        <para>
            Вызов помощника <emphasis>ActionStack</emphasis> неявно регистрирует плагин
            <emphasis>ActionStack</emphasis>, следовательно, нет необходимости
            явным образом регистрировать плагин <emphasis>ActionStack</emphasis>
            для использования данной функциональности.
        </para>
    </note>

    <example id="zend.controller.actionhelpers.actionstack.simple">
        <title>Добавление задачи с указанием имен действия, контроллера и модуля</title>

        <para>
            Зачастую, проще всего указать имена действия, контроллера и модуля
            (и прочие параметры запроса) таким же образом, как и при вызове
            <methodname>Zend_Controller_Action::_forward()</methodname>:
        </para>

        <programlisting language="php"><![CDATA[
class FooController extends Zend_Controller_Action
{
    public function barAction()
    {
        // Добавить две задачи в стек
        // Добавить вызов к /foo/baz/bar/baz
        // (FooController::bazAction() со следующими переменными в запросе: bar = baz)
        $this->_helper->actionStack('baz',
                                    'foo',
                                    'default',
                                    array('bar' => 'baz'));

        // Добавить вызов к /bar/bat
        // (BarController::batAction())
        $this->_helper->actionStack('bat', 'bar');
    }
}
]]></programlisting>
    </example>

    <example id="zend.controller.actionhelpers.actionstack.simple2">
        <title>Добавление задачи с использованием нового объекта запроса</title>

        <para>
            Иногда появляется необходимость работать с запросом как с объектом
            (в лучших традициях <acronym>ООП</acronym>). В таком случае объект запроса
            можно передать помощнику <emphasis>ActionStack</emphasis> при его вызове.
        </para>

        <programlisting language="php"><![CDATA[
class FooController extends Zend_Controller_Action
{
    public function barAction()
    {
        // Добавить две задачи в стек
        // Добавить вызов к /foo/baz/bar/baz
        // (FooController::bazAction() со следующими
        // переменными в запросе: bar = baz)
        $request = clone $this->getRequest();
        // Использовать текущие контроллер и модуль;
        // установить новое действие - baz
        $request->setActionName('baz')
                ->setParams(array('bar' => 'baz'));
        $this->_helper->actionStack($request);

        // Добавить вызов к /bar/bat
        // (BarController::batAction())
        $request = clone $this->getRequest();
        // Использовать текущий модуль; установить новый контроллер - bar
        // и действие - bat
        $request->setActionName('bat')
                ->setControllerName('bar');
        $this->_helper->actionStack($request);
    }
}
]]></programlisting>
    </example>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->