<sect1 id="zend.pdf.create">
    <title>Creating and loading PDF documents.</title>
    <para>
    <code>Zend_Pdf</code> class represents PDF document itself and provides document level
    functionality.
    </para>

    <para>
    To create new document new <code>Zend_Pdf</code> object should be created.
    </para>

    <para>
    <code>Zend_Pdf</code> class also provides two static methods to load existing PDF.
    These are <code>Zend_Pdf::load()</code> and <code>Zend_Pdf::parse()</code> methods.
    Both of them return Zend_Pdf object as a result or throw an exception if error occurs.
    </para>

    <example id="zend.pdf.create.example-1">
        <title>Create new or load existing PDF document.</title>
        <programlisting role="php"><![CDATA[<?php
...
// Create new PDF document.
$pdf1 = new Zend_Pdf();

// Load PDF document from a file.
$pdf2 = Zend_Pdf::load($fileName);

// Load PDF document from a string.
$pdf3 = Zend_Pdf::parse($pdfString);
...]]>
      </programlisting>
    </example>

    <para>
    PDF file format supports incremental document update. Thus each time when document
    is updated, then new revision of the document is created.
    Zend_Pdf module supports retrieving of specified revision.
    </para>
    <para>
    Revision can be specified as a second parameter for <code>Zend_Pdf::load()</code> and
    <code>Zend_Pdf::parse()</code> methods or requested by <code>Zend_Pdf::rollback()</code>
        <footnote>
            <para>
            <code>Zend_Pdf::rollback()</code> method must be invoked before any changes, applied to the document.
            Otherwise behavior is undefined.
            </para>
        </footnote>
    call.
    </para>

    <example id="zend.pdf.create.example-2">
        <title>Requesting specified revision of the PDF document.</title>
        <programlisting role="php"><![CDATA[<?php
...
// Load PDF previouse revision of the document.
$pdf1 = Zend_Pdf::load($fileName, 1);

// Load PDF previouse revision of the document.
$pdf2 = Zend_Pdf::parse($pdfString, 1);

// Load first revision of the document.
$pdf3 = Zend_Pdf::load($fileName);
$revisions = $pdf3->revisions();
$pdf3->rollback($revisions - 1);
...]]>
        </programlisting>
    </example>


</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
