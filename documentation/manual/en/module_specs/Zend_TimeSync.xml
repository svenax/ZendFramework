<sect1 id="zend.timesync.introduction">

    <title>Introduction</title>

    <para>
        <code>Zend_TimeSync</code> is able to receive internet or network time from a timeserver using
        the <emphasis role="strong">NTP</emphasis> or <emphasis role="strong">SNTP</emphasis> protocol.
        With <code>Zend_TimeSync</code> the Zend Framework is able to act independently from the
        timesettings of the server where it is running.
    </para>

    <para>
        To be independent from the actual time of the server, <code>Zend_TimeSync</code> does internally
        work just with the difference of the real time which is send through NTP or SNTP and the internal
        servers time.
    </para>

    <note>

        <title>Background</title>

        <para>
            <code>Zend_TimeSync</code> is not able to change the server's time, but it will return a
            <link linkend="zend.date.introduction">Zend_Date</link> instance from which the difference
            to the servers time can be worked with.
        </para>

    </note>

    <sect2 id="zend.timesync.introduction.why">

        <title>Why <code>Zend_TimeSync</code> ?</title>

        <para>
            So why would someone use <code>Zend_TimeSync</code> ?
        </para>

        <para>
            Normally every server within a multiserver farm will have a service running which synchronises
            the own time with a timeserver. So within a standard environment it should not be necessary to
            use <code>Zend_TimeSync</code>. But it can become handy if there is no service available and if
            you don't have the right to install such a service.
        </para>

        <para>
            Here are some example usecases, where <code>Zend_TimeSync</code> is perfect suited for:
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">Server without timeservice</emphasis>
                </para>
                <para>
                    If your application is running on a server and this server does not have any timeservice
                    running it can be good to implement <code>Zend_TimeSync</code> within the own application.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Separated database server</emphasis>
                </para>
                <para>
                    If your database is running on a separated server and the other server is not connected
                    with <emphasis role="strong">NTP</emphasis> or <emphasis role="strong">SNTP</emphasis>
                    to the application server you would expect problems with data stored into the database
                    where timestamps are used.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Multiple servers</emphasis>
                </para>
                <para>
                    If your application is running on more than one server and the timebase of this servers
                    are not coupled together you can expect problems within your application when part of
                    the application are coming from one server and others from other servers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Batch processing</emphasis>
                </para>
                <para>
                    If your want to include or work with a timeservice within a batch file or within a
                    command line application.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            In all this cases <code>Zend_TimeSync</code> is a perfect solution and can be used if you are
            not able to run any service on your server.
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.ntp">

        <title>What is NTP ?</title>

        <para>
            The <code>Network Time Protocol</code> (<emphasis role="strong">NTP</emphasis>) is a protocol
            for synchronizing the clocks of computer systems over packet-switched, variable-latency data
            networks. NTP uses UDP port 123 as it's transport layer. See
            <ulink url="http://en.wikipedia.org/wiki/Network_Time_Protocol">this wikipedia article</ulink>
            for details about this protocol.
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.sntp">

        <title>What is SNTP?</title>

        <para>
            The <code>Simple Network Time Protocol</code> (<emphasis role="strong">SNTP</emphasis>) is a
            protocol for synchronising with clocks of computer systems over packet-switched, variable-latency
            data networks. SNTP uses UDP port 37 as it's transport layer. It is nearly related to the
            <code>NTP</code> Protocol but simpler.
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.problematic">

        <title>Problematic usage</title>

        <para>
            Be warned that when you are using <code>Zend_TimeSync</code> you will have to think about some
            details related to the structure of timesync and the web itself. How problems can be avoided
            and best practice will be described here. Read carefully before using <code>Zend_TimeSync</code>.
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.decision">

        <title>Decide which server to use</title>

        <para>
            You have to select the timeserver which you want to use very carefully. This has several reasons
            which are described here:
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    Distance
                </para>
                <para>
                    The distance from the server where your application is running to the timeserver you are
                    requesting. If your server is in europe it would make no sense to use a timeserver in
                    tahiti. Select always a server which is not far away. This reduces the time for the
                    request and reduced network load.
                </para>
            </listitem>
            <listitem>
                <para>
                    Speed
                </para>
                <para>
                    How long it takes to receive the request is also relevant. Try some servers to get the
                    best result. If you are requesting a server which is never accessible you will always
                    have a unnecessary delay.
                </para>
            </listitem>
            <listitem>
                <para>
                    Splitting
                </para>
                <para>
                    Do not use always the same server. All timeservers will lock request from servers which
                    are flooding the server. If your application makes excessive use of timeservers you
                    should not use a single timeserver but one of the pools described later.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            So where can you find a timeserver ? Generally you can use any timeserver you know. This can be
            a timeserver within you LAN or any public timeserver you know. If you decide to use a public
            timeserver you should use a server pool. Serverpools are public addresses where you will get
            a random timeserver from the pool if you request the time. This way you will not have to split your
            requests. There are public serverpools available for different regions so you will not have any of the
            problems mentioned above.
        </para>

        <para>
            Take a look at <ulink url="http://www.pool.ntp.org">pool.ntp.org</ulink> to get your nearest
            serverpool. So if your server is located within germany for example you can connect to
            <code>0.europe.pool.ntp.org</code> and so on.
        </para>

    </sect2>

</sect1>
