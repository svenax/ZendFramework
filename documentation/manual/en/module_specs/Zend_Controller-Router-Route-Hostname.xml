<sect3 id="zend.controller.router.routes.hostname">
    <title>Zend_Controller_Router_Route_Hostname</title>

    <para>
        <code>Zend_Controller_Router_Route_Hostname</code> is the hostname route of
        the framework. It works similar to the standard route, but it works on
        the with the hostname of the called URL instead with the path.
    </para>

    <para>
        Let's use the example from the standard route and see how it would look
        like in a hostname based way. Instead of calling the user via a path,
        we'd want to have a user to be able to call
        <code>http://martel.users.example.com</code> to see the information
        about the user "martel":
    </para>

    <programlisting role="php"><![CDATA[
$hostnameRoute = new Zend_Controller_Router_Route_Hostname(
    ':username.users.example.com',
    array(
        'controller' => 'profile',
        'action'     => 'userinfo'
    )
);

$plainPathRoute = new Zend_Controller_Router_Route_Static('');

$router->addRoute('user', $hostnameRoute->chain($plainPathRoute);
]]>
    </programlisting>

    <para>
        The first parameter in the <code>Zend_Controller_Router_Route_Hostname</code>
        constructor is a route definition that will be matched to a hostname. Route
        definitions consist of static and dynamic parts separated by the dot
        ('.') character. Dynamic parts, called variables, are marked by
        prepending a colon to the variable name: <code>:username</code>.
        Static parts are just simple text: <code>user</code>.
    </para>

    <para>
        Hostname routes can, but never should be used as is. The reason behind
        that is, that a hostname route alone would match any path. So what you
        have to do is to chain a path route to the hostname route. This is done
        like in the example by calling <code>$hostnameRoute->chain($pathRoute);</code>.
        By doing this, <code>$hostnameRoute</code> isn't modified, but a new
        route (<code>Zend_Controller_Router_Route_Chain</code>) is returned,
        which can then be given to the router.
    </para>

    <note>
        <title>Parameter Priority</title>
        <para>
            When chaining routes like the hostname route and the path route
            together, the parameters of the hostname route have a higher
            priority than the parameters of the path route. Thus if you define
            a controller in the hostname and in the path route, the controller
            of the hostname route will be selected.
        </para>
    </note>

    <sect4 id="zend.controller.router.routes.hostname.config">
        <title>Hostname Routes via <code>Zend_Config</code></title>

        <para>
            To chain hostname routes and path routes together, there is an
            additional parameter for the configuration called <code>chains</code>.
            This one is simply a list of routes, which will be chained with
            the parent route. Neither the parent- nor the child-route will be
            added directly to the router but only the chained route. The
            name of the chained route in the router will be the parent route
            name and the child route name concatenated with a dash (-). A simple
            config in XML would look like:
        </para>

        <programlisting role="xml"><![CDATA[
<routes>
    <www type="Zend_Controller_Router_Route_Hostname">
        <route>www.example.com</route>
        <chains>
            <index type="Zend_Controller_Router_Route_Static">
                <route></route>
                <defaults module="default" controller="index" action="index" />
            </index>
            <imprint type="Zend_Controller_Router_Route_Static">
                <route>imprint</route>
                <defaults module="default" controller="index" action="index" />
            </imprint>
        </chains>
    </www>
    <users type="Zend_Controller_Router_Route_Hostname">
        <route>users.example.com</route>
        <chains>
            <profile type="Zend_Controller_Router_Route">
                <route>:username</route>
                <defaults module="users" controller="profile" action="index" />
            </profile>
        </chains>
    </users>
    <misc type="Zend_Controller_Router_Route_Static">
        <route>misc</route>
    </misc>
</routes>
]]>
        </programlisting>

        <para>
            This will result in the three routes <code>www-index</code>,
            <code>www-imprint</code> and <code>users-profile</code> which will
            only match based on the hostname and the route <code>misc</code>,
            which will match with any hostname.
        </para>
    </sect4>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
