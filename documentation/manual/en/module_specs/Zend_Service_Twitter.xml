<sect1 id="zend.service.twitter" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Zend_Service_Twitter</title>

    <sect2 id="zend.service.twitter.introduction">
        <title>Introduction</title>

        <para>
            <code>Zend_Service_Twitter</code> provides a client for the <ulink
                url="http://apiwiki.twitter.com/REST+API+Documentation">Twitter REST API</ulink>.
            Zend_Service_Twitter will allow you to query the public timeline and if you provide a username
            and password for Twitter it will allow you to get and update your status, reply to friends,
            direct message firends, mark tweets as favorite and much more.
        </para>

        <para>
            <code>Zend_Service_Twitter</code> is implementing a REST service and  all methods return an instance of
            <code>Zend_Rest_Client_Result</code>.
        </para>

        <para>
            <code>Zend_Service_Twitter</code> is borken up into subsections so you can easily identify which type of call
            is being requested.
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <code>account</code>, make sure that your account credentials are valid, check your api rate limit
                    and end the current session for the authenticated user.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>status</code>, retrieves the public and user timelines and allows you to show, update, destroy
                    and retrieve replies for the authenticated user.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>user</code>, retrieves the friends, followers for the authenticated user.  With the
                    show method you can return extended information about the passed in user.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>directMessage</code>, retrieves the authenticated users recieved direct message and allows you to send and
                    delete new direct message.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>friendship</code>, create or remove a friendship for the authenticated user.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>favorite</code>, list, create or remove a favorite tweet.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>

    <sect2 id="zend.service.twitter.authentication">
        <title>Authentication</title>

        <para>
            With the exception of fetching the public timline <code>Zend_Service_Twitter</code> requires
            authentication to work. Twitter currently uses <ulink
             url="http://en.wikipedia.org/wiki/Basic_authentication_scheme">HTTP Basic Authentication</ulink>.
            You can pass in your username or registered email along with your password for twitter to login.
        </para>

        <example id="zend.service.twitter.authentication.example">
            <title>Creating the Twitter Class</title>
            <para>
                The following code sameple is how you create the Twitter Service and pass in your username and password.
            </para>

            <programlisting role="php"><![CDATA[
$twitter = new Zend_Service_Twitter('myusername', 'mysecretpassword');
// verify your credentials with twitter
$response = $twitter->account->verifyCredentials();
]]>
            </programlisting>
        </example>
    </sect2>

    <sect2 id="zend.service.twitter.accout">
        <title>Accout Methods</title>

        <itemizedlist>
            <listitem>
                <para>
                    <code>verifyCredentials</code>, Use this method to test if supplied user credentials are valid with minimal overhead.
                </para>

                <example id="zend.service.twitter.account.verifycredentails">
                    <programlisting role="php"><![CDATA[
$twitter = new Zend_Service_Twitter('myusername', 'mysecretpassword');
// verify your credentials with twitter
$response = $twitter->account->verifyCredentials();
]]>
                    </programlisting>
                </example>
            </listitem>

            <listitem>
                <para>
                    <code>endSession</code>, Use this method to sign users out of client-facing applications.
                </para>

                <example id="zend.service.twitter.account.endsession">
                    <programlisting role="php"><![CDATA[
$twitter = new Zend_Service_Twitter('myusername', 'mysecretpassword');
// verify your credentials with twitter
$response = $twitter->account->endSession();
]]>
                    </programlisting>
                </example>
            </listitem>

            <listitem>
                <para>
                    <code>rateLimitStatus</code>, Returns the remaining number of API requests available to the authenticating user
                    before the API limit is reached for the current hour.
                </para>

                <example id="zend.service.twitter.account.ratelimitstatus">
                    <programlisting role="php"><![CDATA[
$twitter = new Zend_Service_Twitter('myusername', 'mysecretpassword');
// verify your credentials with twitter
$response = $twitter->account->rateLimitStatus();
]]>
                    </programlisting>
                </example>
            </listitem>
        </itemizedlist>
    </sect2>

    <sect2 id="zend.service.twitter.status">
        <title>Status Methods</title>



    </sect2>

    <xi:include href="Zend_Service_Twitter_Search.xml" />
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
