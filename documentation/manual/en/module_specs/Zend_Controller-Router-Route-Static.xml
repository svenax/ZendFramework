<sect3 id="zend.controller.router.routes.static">
    <title>Zend_Controller_Router_Route_Static</title>

    <para>
        The examples above all use dynamic routes -- routes that contain
        patterns to match against. Sometimes, however, a particular route is
        set in stone, and firing up the regular expression engine would be
        an overkill. The answer to this situation is to use static routes:
    </para>

    <programlisting role="php"><![CDATA[$route = new Zend_Controller_Router_Route_Static(
    'login',
    array('controller' => 'auth', 'action' => 'login')
);
$router->addRoute('login', $route);]]>
    </programlisting>

    <para>
        Above route will match a URL of <code>http://domain.com/login</code>,
        and dispatch to <code>AuthController::loginAction()</code>.
    </para>

</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
