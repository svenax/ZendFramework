<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="zend.json.introduction">
    <title>Introduction</title>
    <para>
        <classname>Zend_Json</classname> provides convenience methods for serializing
        native PHP to JSON and decoding JSON to native PHP. For more information
        on JSON, <ulink url="http://www.json.org/">visit the JSON project
        site</ulink>.
    </para>
    <para>
        JSON, JavaScript Object Notation, can be used for data
        interchange between JavaScript and other languages. Since JSON can be
        directly evaluated by JavaScript, it is a more efficient and lightweight
        format than XML for exchanging data with JavaScript clients.
    </para>

    <para>
        In addition, <classname>Zend_Json</classname> provides a useful way to convert any
        arbitrary XML formatted string into a JSON formatted string. This built-in
        feature will enable PHP developers to transform the enterprise data
        encoded in XML format into JSON format before sending it to browser-based
        Ajax client applications. It provides an easy way to do dynamic data
        conversion on the server-side code thereby avoiding unnecessary XML
        parsing in the browser-side applications. It offers a nice utility
        function that results in easier application-specific data processing techniques.
    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
