<?xml version="1.0" encoding="UTF-8"?>
<sect2 id="zend.application.core-functionality.bootstrap-base">
    <title>Zend_Application_Bootstrap_Base</title>

    <para>
        <code>Zend_Application_Bootstrap_Base</code> is an abstract class which
        provides the base functionallity of a common bootstrap. It implements
        both <link linkend="zend.application.core-functionality.bootstrap-ibootstrap">Zend_Application_Bootstrap_IBootstrap</link>
        and <link linkend="zend.application.core-functionality.bootstrap-iresourcebootstrap">Zend_Application_Bootstrap_IResourceBootstrap</link>.
    </para>

    <table id="zend.application.core-functionality.bootstrap-base.api.table">
        <title>Zend_Application_Bootstrap_Base Methods</title>
        <tgroup cols="4">
            <thead>
                <row>
                    <entry>Method</entry>
                    <entry>Return Value</entry>
                    <entry>Parameters</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry><code>__construct($application)</code></entry>
                    <entry><code>void</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$application</code>: <emphasis>required</emphasis>.
                            Accepts either a <code>Zend_Application</code> or a
                            <code>Zend_Application_Bootstrap_IBootstrap</code>
                            object as the sole argument.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry><para>
                        Constructor. Accepts a single argument, which should be a
                        <code>Zend_Application</code> object, or another bootstrap
                        object.
                    </para></entry>
                </row>

                <row>
                    <entry><code>setOptions(array $options)</code></entry>
                    <entry><code>Zend_Application_Bootstrap_IBootstrap</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$options</code>: <emphasis>required</emphasis>.
                            Array of options to set.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry>
                    <para>
                        Any option that has a matching setter will
                        invoke that setter; otherwise, the option will simply be
                        stored for later retrieval. As an example, if your
                        extending class defined a <code>setFoo()</code> method,
                        the option 'foo' would pass the value to that method.
                    </para>
                    <para>
                        Two additional, special options keys may also be used.
                        <code>pluginPaths</code> may be used to specify prefix
                        paths to plugin resources; it should be an array of
                        class prefix/filesystem path pairs.
                        <code>resources</code> may be used to specify plugin
                        resources to use, and should consist of plugin
                        resource/instantiation options pairs.
                    </para>
                    </entry>
                </row>

                <row>
                    <entry><code>getOption()</code></entry>
                    <entry><code>array</code></entry>
                    <entry>N/A</entry>
                    <entry><para>
                        Returns all options registered via
                        <code>setOptions()</code>.
                    </para></entry>
                </row>

                <row>
                    <entry><code>hasOption($key)</code></entry>
                    <entry><code>boolean</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$key</code>: <emphasis>required</emphasis>.
                            Option key to test.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry><para>Determine if an option key is present.</para></entry>
                </row>

                <row>
                    <entry><code>getOption($key)</code></entry>
                    <entry><code>mixed</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$key</code>: <emphasis>required</emphasis>.
                            Option key to retrieve.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry><para>
                        Retrieve the value associated with an option key;
                        returns null if no option is registered with that key.
                    </para></entry>
                </row>

                <row>
                    <entry><code>setApplication(Zend_Application | Zend_Application_Bootstrap_IBootstrap
                            $application)</code></entry>
                    <entry><code>Zend_Application_Bootstrap_Base</code></entry>
                    <entry><itemizedlist>
                            <listitem><para>
                                <code>$application</code>: <emphasis>required</emphasis>.
                            </para></listitem>
                    </itemizedlist></entry>
                    <entry><para>
                        Register the parent application/bootstrap object.
                    </para></entry>
                </row>

                <row>
                    <entry><code>getApplication()</code></entry>
                    <entry><code>Zend_Application | Zend_Application_Bootstrap_IBootstrap</code></entry>
                    <entry>N/A</entry>
                    <entry><para>
                        Retrieve the application/bootstrap object passed via the
                        constructor.
                    </para></entry>
                </row>

                <row>
                    <entry><code>getEnvironment()</code></entry>
                    <entry><code>string</code></entry>
                    <entry>N/A</entry>
                    <entry><para>
                        Retrieve the environment string registered with the
                        parent application/bootstrap object.
                    </para></entry>
                </row>

                <row>
                    <entry><code>getClassResources()</code></entry>
                    <entry><code>array</code></entry>
                    <entry>N/A</entry>
                    <entry><para>
                        Retrieve a list of available resource initializer names
                        as defined in the class. This may be implementation
                        specific.
                    </para></entry>
                </row>

                <row>
                    <entry><code>bootstrap($resource = null)</code></entry>
                    <entry><code>mixed</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$resource</code>: <emphasis>optional</emphasis>.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry>
                    <para>
                        If <code>$resource</code> is empty, execute all
                        bootstrap resources. If a string, execute that single
                        resource; if an array, execute each resource in the
                        array.
                    </para>

                    <para>
                        This method can be used to run individual bootstraps
                        either defined in the class itself or via resource
                        plugin classes. A resource defined in the class will be
                        run in preference over a resource plugin in the case of
                        naming conflicts.
                    </para>
                    </entry>
                </row>

                <row>
                    <entry><code>run()</code></entry>
                    <entry><code>void</code></entry>
                    <entry>N/A</entry>
                    <entry><para>
                        Defines what application logic to run after
                        bootstrapping.
                    </para></entry>
                </row>

                <row>
                    <entry><code>__call($method, $args)</code></entry>
                    <entry><code>mixed</code></entry>
                    <entry><itemizedlist>
                        <listitem><para>
                            <code>$method</code>: <emphasis>required</emphasis>.
                            The method name to call.
                        </para></listitem>

                        <listitem><para>
                            <code>$args</code>: <emphasis>required</emphasis>.
                            Array of arguments to use in the method call.
                        </para></listitem>
                    </itemizedlist></entry>
                    <entry><para>
                        Provides convenience to bootstrapping individual
                        resources by allowing you to call
                        'bootstrap&lt;ResourceName&gt;()' instead of using the
                        <code>bootstrap()</code> method.
                    </para></entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</sect2>
