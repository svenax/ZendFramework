<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="zend.validate.set" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Standard Validation Classes</title>

    <para>
        Zend Framework comes with a standard set of validation classes, which are ready for you to
        use.
    </para>

    <sect2 id="zend.validate.set.alnum">
        <title>Alnum</title>

        <para>
            Returns <constant>TRUE</constant> if and only if <varname>$value</varname> contains only
            alphabetic and digit characters. This validator includes an option to also consider
            white space characters as valid.
        </para>

        <note>
            <para>
                The alphabetic characters mean characters that makes up words in each language.
                However, the English alphabet is treated as the alphabetic characters in following
                languages: Chinese, Japanese, Korean. The language is specified by
                <classname>Zend_Locale</classname>.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.validate.set.alpha">
        <title>Alpha</title>

        <para>
            Returns <constant>TRUE</constant> if and only if <varname>$value</varname> contains only
            alphabetic characters. This validator includes an option to also consider white space
            characters as valid.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-Barcode.xml" />
    <xi:include href="Zend_Validate-Between.xml" />
    <xi:include href="Zend_Validate-Callback.xml" />
    <xi:include href="Zend_Validate-CreditCard.xml" />

    <sect2 id="zend.validate.set.ccnum">
        <title>Ccnum</title>

        <note>
            <para>
                The <classname>Ccnum</classname> validator has been deprecated in favor of the
                <classname>CreditCard</classname> validator. For security reasons you should use
                CreditCard instead of Ccnum.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.validate.set.date">
        <title>Date</title>

        <para>
            Returns <constant>TRUE</constant> if <varname>$value</varname> is a valid date of the
            format 'YYYY-MM-DD'. If the optional <property>locale</property> option is set then the
            date will be validated according to the set locale. And if the optional
            <property>format</property> option is set this format is used for the validation. for
            details about the optional parameters see <link
                linkend="zend.date.others.comparison.table">Zend_Date::isDate()</link>.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-Db.xml" />

    <sect2 id="zend.validate.set.digits">
        <title>Digits</title>

        <para>
            Returns <constant>TRUE</constant> if and only if <varname>$value</varname> only contains
            digit characters.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-EmailAddress.xml" />

    <sect2 id="zend.validate.set.float">
        <title>Float</title>

        <para>
            Returns <constant>TRUE</constant> if and only if <varname>$value</varname> is a
            floating-point value. Since Zend Framework 1.8 this validator takes into account the
            actual locale from browser, environment or application wide set locale. You can of
            course use the get/setLocale accessors to change the used locale or give it while
            creating a instance of this validator.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-GreaterThan.xml" />
    <xi:include href="Zend_Validate-Hex.xml" />
    <xi:include href="Zend_Validate-Hostname.xml" />
    <xi:include href="Zend_Validate-Iban.xml" />
    <xi:include href="Zend_Validate-Identical.xml" />
    <xi:include href="Zend_Validate-InArray.xml" />
    <xi:include href="Zend_Validate-Int.xml" />
    <xi:include href="Zend_Validate-Ip.xml" />
    <xi:include href="Zend_Validate-Isbn.xml" />
    <xi:include href="Zend_Validate-LessThan.xml" />
    <xi:include href="Zend_Validate-NotEmpty.xml" />
    <xi:include href="Zend_Validate-PostCode.xml" />
    <xi:include href="Zend_Validate-Regex.xml" />
    <xi:include href="Zend_Validate-Sitemap.xml" />
    <xi:include href="Zend_Validate-StringLength.xml" />
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
