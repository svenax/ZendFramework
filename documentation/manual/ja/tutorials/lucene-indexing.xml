<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 24249 -->
<sect1 id="learning.lucene.indexing">
    <title>索引付け</title>

    <para>
        索引付けは、既存または新しいインデックスに新しい文書を追加することにより実行されます。
    </para>

    <programlisting language="php"><![CDATA[
$index->addDocument($doc);
]]></programlisting>

    <para>
        文書オブジェクトを生成する方法は2つあります。
        その一つは、手動で行なうことです。
    </para>

    <example id="learning.lucene.indexing.doc-creation">
        <title>手動の文書構成</title>

        <programlisting language="php"><![CDATA[
$doc = new Zend_Search_Lucene_Document();
$doc->addField(Zend_Search_Lucene_Field::Text('url', $docUrl));
$doc->addField(Zend_Search_Lucene_Field::Text('title', $docTitle));
$doc->addField(Zend_Search_Lucene_Field::unStored('contents', $docBody));
$doc->addField(Zend_Search_Lucene_Field::binary('avatar', $avatarData));
]]></programlisting>
    </example>

    <para>
        2つ目の方法は、<acronym>HTML</acronym> または Microsoft Office 2007 ファイルから読み込むことです。
    </para>

    <example id="learning.lucene.indexing.doc-loading">
        <title>文書読み込み</title>

        <programlisting language="php"><![CDATA[
$doc = Zend_Search_Lucene_Document_Html::loadHTML($htmlString);
$doc = Zend_Search_Lucene_Document_Docx::loadDocxFile($path);
$doc = Zend_Search_Lucene_Document_Pptx::loadPptFile($path);
$doc = Zend_Search_Lucene_Document_Xlsx::loadXlsxFile($path);
]]></programlisting>
    </example>

    <para>
        サポートされる形式のいずれかから文書が読み込まれた場合、
        新しいユーザー定義項目でやはり手動で拡張できます。
    </para>

    <sect2 id="learning.lucene.indexing.policy">
        <title>索引付けの方針</title>

        <para>
            アプリケーション方式設計の中で索引付けの方針を定義しなければなりません。
        </para>

        <para>
            オンデマンドでの索引付けの構成を必要とするかもしれません
            （<acronym>OLTP</acronym>システムのような何か）。
            そのようなシステムでは、通常ユーザーリクエスト毎に文書を１つ追加します。
            このように、<emphasis>MaxBufferedDocs</emphasis> オプションは、システムに影響を及ぼしません。
            一方では、スクリプトの最大実行時間を制限できるので、
            <emphasis>MaxMergeDocs</emphasis>はとても便利です。
            <emphasis>MergeFactor</emphasis> は、平均的な索引付け時間
            （平均的な自動最適化時間によっても影響されます）と、
            検索のパフォーマンス
            （インデックス最適化レベルはセグメント数に依存します）
            との間のバランスを保つ値に設定すべきです。
        </para>

        <para>
            主にバッチのインデックス更新を実行しているなら、構成では、
            利用可能なメモリー量でサポートされる最大値に設定された
            <emphasis>MaxBufferedDocs</emphasis>オプションを使用すべきです。
            <emphasis>MaxMergeDocs</emphasis> と <emphasis>MergeFactor</emphasis> は、
            できる限り自動最適化関係を減らす値に設定されなければなりません。
            <footnote><para>追加の制限は、
            並列のオープン操作のために OS によってサポートされるファイル・ハンドラーの最大です。
            </para></footnote>
            完全なインデックス最適化は、索引付けの後に利用されなければなりません。
        </para>

        <example id="learning.lucene.indexing.optimization">
            <title>インデックスの最適化</title>

            <programlisting language="php"><![CDATA[
$index->optimize();
]]></programlisting>
        </example>

        <para>
            一部の構成では、
            <!-- TODO : to be translated -->
            it's more effective to serialize index updates by organizing
            update requests into a queue and processing several update requests in a single script execution.
            これは、インデックスのオープンのオーバーヘッドを減らし、
            インデックス文書のバッファリングを利用できるようにします。
        </para>
    </sect2>
</sect1>
