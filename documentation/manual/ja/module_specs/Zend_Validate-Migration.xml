<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 17908 -->
<sect1 id="zend.validate.migration">

    <title>以前のバージョンからの移行</title>

    <para>
        <classname>Zend_Validate</classname>の<acronym>API</acronym>は、時折変わってきました。
        以前のバージョンで<classname>Zend_Validate</classname>とそのサブコンポーネントを使い始めたなら、
        新しい<acronym>API</acronym>を使うようスクリプトを移行するために、下記のガイドラインに従ってください。
    </para>

    <sect2 id="zend.validate.migration.fromoneninetooneten">
        <title>1.9から1.10以降への移行</title>
        <sect3 id="zend.validate.migration.fromoneninetooneten.selfwritten">
            <title>書かれたアダプタ自身</title>

            <para>
                かかれたバリデータ自身の内部からエラーを返すよう設定するときは、
                <methodname>_error()</methodname>メソッドを呼ばなくてはいけません。
                Zend Framework 1.10 以前では、パラメータを与えなくてもこのメソッドを呼び出せました。
                そこで、最初に見つかったメッセージテンプレートを使いました。
            </para>

            <para>
                この振る舞いには、一つ以上の異なるメッセージを返すバリデータを使うときに問題があります。
                また、既存のバリデータを拡張すると、予期しない結果を得ることもあります。
                このせいで、あなたが期待した通りではないメッセージにユーザーが遭遇することにもなりました。
            </para>

            <programlisting language="php"><![CDATA[
My_Validator extends Zend_Validate_Abstract
{
    public isValid($value)
    {
        ...
        $this->_error(); // 異なるOS間での予期されない結果
        ...
    }
}
]]></programlisting>

            <para>
                この問題を防ぐために、<methodname>_error()</methodname>メソッドにパラメータを与えないで呼び出すことは、
                もはやできなくなります。
            </para>

            <programlisting language="php"><![CDATA[
My_Validator extends Zend_Validate_Abstract
{
    public isValid($value)
    {
        ...
        $this->_error(self::MY_ERROR); // 定義されたエラー、予期されない結果ではありません
        ...
    }
}
]]></programlisting>
        </sect3>

        <sect3 id="zend.validate.migration.fromoneninetooneten.datevalidator">
            <!-- TODO: to be translated -->
            <title>Simplification in date validator</title>

            <para>
                Before Zend Framework 1.10 2 identical messages were thrown within the date
                validator. These were <constant>NOT_YYYY_MM_DD</constant> and
                <constant>FALSEFORMAT</constant>. As of Zend Framework 1.10 only the
                <constant>FALSEFORMAT</constant> message will be returned when the given date
                does not match the set format.
            </para>
        </sect3>

        <sect3 id="zend.validate.migration.fromoneninetooneten.barcodevalidator">
            <title>Fixes in Alpha, Alnum and Barcode validator</title>

            <para>
                Before Zend Framework 1.10 the messages within the 2 barcode adapters, the Alpha
                and the Alnum validator were identical. This introduced problems when using custom
                messages, translations or multiple instances of these validators.
            </para>

            <para>
                As with Zend Framework 1.10 the values of the constants were changed to
                be unique. When you used the constants as proposed in the manual there is
                no change for you. But when you used the content of the constants in your code
                then you will have to change them. The following table shows you the changed values:
            </para>

            <table id="zend.validate.migration.fromoneninetooneten.barcodevalidator.table">
                <title>Available Validation Messages</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>Validator</entry>
                            <entry>Constant</entry>
                            <entry>Value</entry>
                        </row>
                    </thead>

                    <tbody>
                        <row>
                            <entry>Alnum</entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>alnumStringEmpty</entry>
                        </row>

                        <row>
                            <entry>Alpha</entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>alphaStringEmpty</entry>
                        </row>

                        <row>
                            <entry>Barcode_Ean13</entry>
                            <entry><constant>INVALID</constant></entry>
                            <entry>ean13Invalid</entry>
                        </row>

                        <row>
                            <entry>Barcode_Ean13</entry>
                            <entry><constant>INVALID_LENGTH</constant></entry>
                            <entry>ean13InvalidLength</entry>
                        </row>

                        <row>
                            <entry>Barcode_UpcA</entry>
                            <entry><constant>INVALID</constant></entry>
                            <entry>upcaInvalid</entry>
                        </row>

                        <row>
                            <entry>Barcode_UpcA</entry>
                            <entry><constant>INVALID_LENGTH</constant></entry>
                            <entry>upcaInvalidLength</entry>
                        </row>

                        <row>
                            <entry>Digits</entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>digitsStringEmpty</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

        </sect3>
    </sect2>
</sect1>
