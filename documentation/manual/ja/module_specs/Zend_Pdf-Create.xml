<!-- EN-Revision: 10934 -->
<sect1 id="zend.pdf.create">
    <title>PDF ドキュメントの作成および読み込み</title>
    <para>
    <code>Zend_Pdf</code> クラスは PDF ドキュメントを表すもので、
    ドキュメントレベルの機能を提供します。
    </para>

    <para>
    新しいドキュメントを作成するには、新しい <code>Zend_Pdf</code>
    オブジェクトを作成しなければなりません。
    </para>

    <para>
    <code>Zend_Pdf</code> クラスでは、既存の PDF を読み込むための
    2 つの静的メソッドも提供しています。
    <code>Zend_Pdf::load()</code> および <code>Zend_Pdf::parse()</code> です。
    これらは両方とも Zend_Pdf オブジェクトを返します。
    エラーが発生した場合には例外がスローされます。
    </para>

    <example id="zend.pdf.create.example-1">
        <title>新しい PDF ドキュメントの作成あるいは既存の PDF ドキュメントの読み込み</title>
        <programlisting role="php"><![CDATA[
...
// 新しい PDF ドキュメントを作成します。
$pdf1 = new Zend_Pdf();

// ファイルから PDF ドキュメントを読み込みます。
$pdf2 = Zend_Pdf::load($fileName);

// 文字列から PDF ドキュメントを読み込みます。
$pdf3 = Zend_Pdf::parse($pdfString);
...]]>
      </programlisting>
    </example>

    <para>
    PDF ファイルでは、ドキュメントのインクリメンタルな更新がサポートされています。
    つまり、ドキュメントを更新するたびに、そのドキュメントの新しい版が作成されます。
    Zend_Pdf モジュールには、指定した版を取得する機能も含まれています。
    </para>
    <para>
    版を指定するには <code>Zend_Pdf::load()</code> および
    <code>Zend_Pdf::parse()</code> メソッドの第 2 引数を使用するか、
    <code>Zend_Pdf::rollback()</code> を使用します。
        <footnote>
            <para>
            <code>Zend_Pdf::rollback()</code> メソッドは、
            変更がドキュメントに適用される前に起動しなければなりません。
            それ以外の場合の挙動は未定義です。
            </para>
        </footnote>
    call.
    </para>

    <example id="zend.pdf.create.example-2">
        <title>指定した版の PDF ドキュメントの取得</title>
        <programlisting role="php"><![CDATA[
...
// 前の版の PDF ドキュメントを読み込みます。
$pdf1 = Zend_Pdf::load($fileName, 1);

// 前の版の PDF ドキュメントを読み込みます。
$pdf2 = Zend_Pdf::parse($pdfString, 1);

// ドキュメントの最初の版を読み込みます。
$pdf3 = Zend_Pdf::load($fileName);
$revisions = $pdf3->revisions();
$pdf3->rollback($revisions - 1);
...]]>
        </programlisting>
    </example>


</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
