<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 14844 -->
<sect1 id="zend.service.amazon.ec2.ebs">
    <title>Zend_Service_Amazon_Ec2: Elastischer Block Speicher (EBS)</title>

    <para>
        Amazon Elastischer Block Speicher (Amazon EBS) ist ein neuer Typ an Speicher der speziell
        für Amazon EC2 Instanzen entwickelt wurde. Amazon EBS erlaubt es ein Volume zu erstellen
        das als Device von Amazon EC2 Instanzen gemountet werden kann. Amazon EBS Volums verhalten
        sich wie rohe unformatierte externe Block Devices. Sie haben einen vom Benutzer angegebenen
        Device Namen und bieten ein Block Device Interface. Man kann ein File System auf Amazon EBS
        Volums laden, oder Sie genauso verwenden wie man ein Block Device verwenden würde.
    </para>
    <para>
        Man kann bis zu zwanzig Amazon EBS Volums jeder Größe erstellen (von einem GiB bis zu einem
        TiB). Jedes Amazon EBS Volume kann jeder Amazon EC2 Instanz angehängt werden welche in der
        selben Availability Zone ist, oder kann auch un-angehängt bleiben.
    </para>
    <para>
        Amazon EBS bietet die Möglichkeit einen Snapshot der eigenen Amazon EBS Volums auf Amazon
        S3 zu erstellen. Man kann diese Snapshots als Startpunkt für neue Amazon EBS Volums
        verwenden und kann eigene Daten auf diese Art für eine lange Zeit schützen.
    </para>

    <sect2 id="zend.service.amazon.ec2.ebs.creating">
        <title>EBS Volums und Snapshots erstellen</title>

        <example id="zend.service.amazon.ec2.ebs.creating.volume">
            <title>Ein neues EBS Volume erstellen</title>
            <para>
                Um ein brandneues EBS Volume zu erstellen benötigt man die Größe und die Zone in
                der das EBS Volume sein soll.
            </para>
            <para>
                <code>createNewVolume</code> gibt ein Array zurück das Informationen über das neue
                Volume enthält. Diese beinhalten volumeId, size, zone, status und createTime.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->createNewVolume(40, 'us-east-1a');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.creating.volumesnapshot">
            <title>Ein EBS Volume von einem Snapshot erstellen</title>
            <para>
                Um ein EBS Volume von einem Snapshot zu erstellen benötigt man die snapshot_id
                in die Zone in der man das EBS Volume haben will.
            </para>
            <para>
                <code>createVolumeFromSnapshot</code> gibt ein Array mit Informationen zurück.
                Diese enthalten volumeId, size, zone, status, createTime und snapshotId.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->createVolumeFromSnapshot('snap-78a54011', 'us-east-1a');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.creating.snapshot">
            <title>Einen Snapshot von einem EBS Volume erstellen</title>
            <para>
                Um einen Snapshot von einem EBS Volume zu erstellen wird die volumeId des EBS
                Volums benötigt.
            </para>
            <para>
                <code>createSnapshot</code> gibt ein Array zurück das Informationen über den neuen
                Volume Snapshot enthält. Dieses beinhaltet snapshotId, volumeId, status, startTime
                und progress.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->createSnapshot('volumeId');
]]>
            </programlisting>
        </example>
    </sect2>

    <sect2 id="zend.service.amazon.ec2.ebs.describing">
        <title>Describing EBS Volues and Snapshots</title>

        <example id="zend.service.amazon.ec2.ebs.describing.volume">
            <title>Ein EBS Volume beschreiben</title>
            <para>
                <code>describeVolume</code> erlaubt es Informationen über ein EBS Volume oder ein
                Set von EBS Volums zu erhalten. Wenn nichts angegeben wird, werden alle EBS Volums
                zurück gegeben. Wenn nur ein EBS Volume beschrieben werden soll, kann ein String
                übergeben werden, wärend ein Array von EBS Volume Id's übergeben werden können um
                diese zu beschreiben.
            </para>
            <para>
                <code>describeVolume</code> gibt ein Array mit Informationen über jedes Volume
                zurück. Dieses enthält die volumeId, size, status und createTime. Wenn das Volume
                an eine Instanz angehängt ist, wird ein zusätzlicher Wert attachmentSet
                zurückgegeben.
                will return an array with information about each Volume which
                includes the volumeId, size, status and createTime.  If the volume is attached to an instance,
                an addition value of attachmentSet will be returned.  Attachment set contains information
                about the instance that the EBS Volume is attached to, which includes volumeId, instanceId,
                device, status and attachTime.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->describeVolume('volumeId');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.describing.attachedvolumes">
            <title>Describe Attached Volumes</title>
            <para>
                To return a list of EBS Volumes currently attached to a running instance you can call this method.
                It will only return an EBS Volumes attached the passed in instanceId.
            </para>
            <para>
                <code>describeAttachedVolumes</code> returns the same information as the <code>describeVolume</code>
                but only for the EBS Volumes that are currently attached to the specified instanceId.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->describeAttachedVolumes('instanceId');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.describing.snapshot">
            <title>Describe an EBS Volume Snapshot</title>
            <para>
                <code>describeSnapshot</code> allows you to get information on an EBS Volume Snapshot
                or a set of EBS Volume Snapshots.  If nothing is passed in then it will return information
                about all EBS Volume Snapshots.  If only one EBS Volume Snapshot needs to be described it's
                snapshotId can be passed in while an array of EBS Volume Snapshot Id's can be passed in to
                describe them.
            </para>
            <para>
                <code>describeSnapshot</code> will return an array containg informaion about each EBS Volume Snapshot
                which includes the snapshotId, volumeId, status, startTime and progress.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->describeSnapshot('volumeId');
]]>
            </programlisting>
        </example>
    </sect2>

    <sect2 id="zend.service.amazon.ec2.ebs.attachdetach">
        <title>Attach and Detaching Volumes from Instances</title>

        <example id="zend.service.amazon.ec2.ebs.attachdetach.attach">
            <title>Attaching an EBS Volume</title>
            <para>
                <code>attachVolume</code> will attach an EBS Volume to a running Instance.  To
                attach a volume you need to specify the volumeId, the instanceId and the
                device <emphasis>(ex: /dev/sdh)</emphasis>.
            </para>
            <para>
                <code>attachVolume</code> will return an array with information about the
                attach status which contains volumeId, instanceId, device, status and
                attachTime
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->attachVolume('volumeId', 'instanceid', '/dev/sdh');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.attachdetach.detach">
            <title>Detaching an EBS Volume</title>
            <para>
                <code>detachVolume</code> will detach an EBS Volume from a running Instance.
                <code>detachVolume</code> required that you specify the volumeId with the optional
                instanceId and device name that was passed when attaching the volume.  If you need to
                force the detachment you can set the forth parameter to be true and it will force
                the volume to detach.
            </para>
            <para>
                <code>detachVolume</code> returns an array containing status information about
                the EBS Volume which includes volumeId, instanceId, device, status and attachTime.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->detachVolume('volumeId');
]]>
            </programlisting>
        </example>
        <note>
            <title>Forced Detach</title>
            <para>
                You should only for a detach if the previous detachment attempt did not occur
                cleanly(logging into an instance, unmounting the volume, and detaching normally).
                This option can lead to data loss or a corrupted file system. Use this option
                only as a last resort to detach a volume from a failed instance. The instance
                will not have an opportunity to flush file system caches nor file system meta
                data. If you use this option, you must perform file system check and repair
                procedures.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.service.amazon.ec2.ebs.deleting">
        <title>Deleting EBS Volumes and Snapshots</title>

        <example id="zend.service.amazon.ec2.ebs.deleting.volume">
            <title>Deleting an EBS Volume</title>
            <para>
                <code>deleteVolume</code> will delete an unattached EBS Volume.
            </para>
            <para>
                <code>deleteVolume</code> will return boolean true or false.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->deleteVolume('volumeId');
]]>
            </programlisting>
        </example>

        <example id="zend.service.amazon.ec2.ebs.deleting.snapshot">
            <title>Deleting an EBS Volume Snapshot</title>
            <para>
                <code>deleteSnapshot</code> will delete a EBS Volume Snapshot.
            </para>
            <para>
                <code>deleteSnapshot</code> returns booleen true or false.
            </para>

            <programlisting role="php"><![CDATA[
$ec2_ebs = new Zend_Service_Amazon_Ec2_Ebs('aws_key','aws_secret_key');
$return = $ec2_ebs->deleteSnapshot('snapshotId');
]]>
            </programlisting>
        </example>
    </sect2>
</sect1>
