<!-- EN-Revision: 11965 -->
<sect1 id="zend.file.transfer.introduction">

    <title>Zend_File_Transfer</title>

    <para>
        <code>Zend_File_Transfer</code> ermöglicht es Entwicklern die Kontrolle über Dateiuploads sowie über
        Dateidownloads zu erhalten. Es erlaubt die Verwendung von eingebuaten Prüfungen für Dateizwecke und
        gibt sogar die Möglichkeit Dateien mit Filtern zu verändern. <code>Zend_File_Transfer</code> arbeitet
        mit Adaptern welche es erlauben die selbe API für unterschiedliche Transportprotokolle wie HTTP, FTP,
        WEBDAV und andere zu verwenden.
    </para>

    <note>
        <title>Einschränkungen</title>
        <para>
            Die aktuelle Implementation von <code>Zend_File_Transfer</code> die in 1.6.0 ausgeliefert wird,
            ist auf HTTP Post Uploads limitiert. Downloaden von Dateien und andere Adapter werden in einem
            kommenden Release hinzugefügt. Nicht implementierte Methoden werfen eine Ausnahme. Deswegen
            sollte aktuell eine Instanz von <code>Zend_File_Transfer_Adapter_Http</code> direkt verwendet
            werden. Das wird sich in Zukunft ändern, sobald mehrere Adapter vorhanden sind.
        </para>
    </note>

    <para>
        Die Verwendung von <code>Zend_File_Transfer</code> ist recht einfach. Es besteht aus zwei Teilen.
        Dem HTTP Formular das den Upload durchführt, und der Behandlung der hochgeladenen Dateien mit
        <code>Zend_File_Transfer</code>. Siehe das folgende Beispiel:
    </para>

    <example id="zend.file.transfer.introduction.example">
        <title>Einfaches File-Upload Formular</title>
        <para>
            Dieses Beispiel zeigt einen einfachen Dateiupload welcher <code>Zend_File_Transfer</code>
            verwendet. Das erste Teil ist das Dateiformular. In unserem Beispiel gibt es nur eine Datei
            welche wir hochladen wollen.
        </para>

        <programlisting><![CDATA[
<form enctype="multipart/form-data" action="/file/upload" method="POST">
    <input type="hidden" name="MAX_FILE_SIZE" value="100000" />
        Choose a file to upload: <input name="uploadedfile" type="file" />
    <br />
    <input type="submit" value="Upload File" />
</form>
]]>
        </programlisting>

        <para>
            Es ist zu beachten das der Bequemlichkeit halber
            <link linkend="zend.form.standardElements.file">Zend_Form_Element_File</link> verwendet werden
            sollte statt das HTML manuell zu erstellen.
        </para>

        <para>
            Der nächste Schritt ist die Erstellung des Empfängers des Uploads. In unserem Beispiel ist der
            Empfänger <code>/file/upload</code>. Als nächstes erstellen wir also den Kontroller
            <code>file</code> mit der Aktion <code>upload</code>.
        </para>

        <programlisting role="php"><![CDATA[
$adapter = new Zend_File_Transfer_Adapter_Http();

$adapter->setDestination('C:\temp');

if (!$adapter->receive()) {
    $messages = $adapter->getMessages();
    echo implode("\n", $messages);
}
]]>
        </programlisting>

        <para>
            Wie man sieht besteht die einfachte Verwendung darin ein Ziel mit der <code>setDestination</code>
            Methode zu definieren und die <code>receive()</code> Methode aufzurufen. Wenn irgendwelche
            Uploadfehler vorhanden sind werden diese als Ausnahme zurückgegeben.
        </para>

    </example>

    <note>
        <title>Achtung</title>
        <para>
            Beachten Sie das das nur die einfachste Verwendung ist. Man sollte dieses Beispiel
            <emphasis role="strong">niemals</emphasis> in einer lebenden Umgebung einsetzen da es
            massive Sicherheitslücken aufweisst. Man sollte immer Prüfungen verwenden um die
            Sicherheit zu erhöhen.
        </para>
    </note>

    <sect2 id="zend.file.transfer.introduction.adapters">

        <title>Von Zend_File_Transfer unterstützte Adapter</title>

        <para>
            <code>Zend_File_Transfer</code> wurde erstellt um verschiedene Adapter und auch Richtungen zu
            unterstützen. Es wurde designt um das Hochladen, Herunterladen und sogar das Weiterleiten
            (Hochladen mit einem Adapter und Herunterladen mit einem anderen Adapter zur gleichen Zeit)
            von Dateien zu erlauben. Aber mit Zend Framework 1.6 ist aktuell nur ein Adapter vorhanden,
            der Http Adapter.
        </para>

        <para>
            Weil aktuell nur ein Adapter vorhanden ist, kann die Basisklasse aktuell noch nicht verwendet werden.
            Deshalb muß man, wenn man <code>Zend_File_Transfer</code> verwenden will, den Adapter direkt
            verwenden.
        </para>
    </sect2>

    <sect2 id="zend.file.transfer.introduction.options">

        <title>Optionen für Zend_File_Transfer</title>

        <para>
            <code>Zend_File_Transfer</code> und dessen Adapter unterstützen verschiedene Optionen. Alle Optionen
            können gesetzt werden indem Sie entweder dem Constructor übergeben werden, oder durch Verwendung  von
            <code>setOptions($options)</code>. <code>getOptions()</code> gibt die aktuell gesetzten Optionen
            zurück. Anbei ist eine Liste aller unterstützten Optionen zu finden.
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="strong">ignoreNoFile</emphasis>: Wenn diese Option auf true gesetzt ist,
                    ignorieren alle Prüfer die Datei wenn Sie nicht vom Formular hochgeladen wurde. Diese
                    Option ist standardmäßig false, was heißt das ein Fehler geworfen wird, wenn die Datei
                    nicht angegeben wurde.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 tw=80 et:
-->
