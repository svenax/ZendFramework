<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 17987 -->
<!-- Reviewed: no -->
<sect1 id="zend.filter.set" xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Standard Filter Klassen</title>

    <para>
        Zend Framework kommt mit einem Standardset von Filtern, welche bereits zur Verwendung fertig
        sind.
    </para>

    <sect2 id="zend.filter.set.alnum">
        <title>Alnum</title>
        <para>
            Gibt den String <varname>$value</varname> zurück und entfernt alles ausser alphabetische
            und nummerische Zeichen. Dieser Filter inkludiert eine Option die auch Leerzeichen
            erlaubt.
        </para>

        <note>
            <para>
                Alphabetische Zeichen bedeuten Zeichen die in jeder Spache Wörter bilden. Trotzdem
                wird das englische Alphabet in den folgenden Sprachen für alphabethische Zeichen
                verwendet: Chinesisch, Japanisch, Koreanisch. Die Sprache wurde von
                <classname>Zend_Locale</classname> spezifiziert.
            </para>
        </note>

    </sect2>

    <sect2 id="zend.filter.set.alpha">
        <title>Alpha</title>
        <para>
            Gibt den String <varname>$value</varname> zurück und entfernt alles ausser alphabetische
            Zeichen. Dieser Filter inkludiert eine Option die auch Leerzeichen erlaubt.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.basename">
        <title>BaseName</title>
        <para>
            Wenn ein String einen Pfad zu einer Datei enthält gibt dieser Filter den Basisnamen der
            Datei zurück.
        </para>
    </sect2>

    <xi:include href="Zend_Filter-Callback.xml" />
    <xi:include href="Zend_Filter-Decryption.xml" />

    <sect2 id="zend.filter.set.digits">
        <title>Digits</title>
        <para>
            Gibt den String <varname>$value</varname> zurück und entfernt alles ausser nummerische
            Zeichen.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.dir">
        <title>Dir</title>
        <para>
            Gibt den Verzeichnisnamen einer Pfadangabe zurück.
        </para>
    </sect2>

    <xi:include href="Zend_Filter-Encryption.xml" />

    <sect2 id="zend.filter.set.htmlentities">
        <title>HtmlEntities</title>
        <para>
            Gibt den String <varname>$value</varname> zurück und konvertiert die Zeichen in Ihre
            entsprechende <acronym>HTML</acronym> Entitität wenn diese existiert.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.int">
        <title>Int</title>
        <para>
            Gibt (int) <varname>$value</varname> zurück.
        </para>
    </sect2>

    <xi:include href="Zend_Filter-LocalizedToNormalized.xml" />
    <xi:include href="Zend_Filter-NormalizedToLocalized.xml" />

    <sect2 id="zend.filter.set.stripnewlines">
        <title>StripNewlines</title>
        <para>
            Gibt den String <varname>$value</varname> ohne Zeilenumbruch Zeichen zurück.
        </para>
    </sect2>

    <xi:include href="Zend_Filter-RealPath.xml" />
    <xi:include href="Zend_Filter-StringToLower.xml" />
    <xi:include href="Zend_Filter-StringToUpper.xml" />

    <sect2 id="zend.filter.set.stringtrim">
        <title>StringTrim</title>
        <para>
            Gibt den String <varname>$value</varname> zurück und entfernt alle Leerzeichen vom
            Beginn und vom Ende.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.striptags">
        <title>StripTags</title>
        <para>
            Dieser Filter gibt den Eingabestring zurück, wobei alle HTML und <acronym>PHP</acronym>
            Tags von Ihm entfernt werden ausser diesen die explizit erlaubt sind. Zusätzlich zur
            Möglichkeit zu definieren welche Tags erlaubt sind können Entwickler definieren welche
            Attribute über alle erlaubten Tags erlaubt sind und auch nur für spezielle Tags. Und
            Letztendlich bietet dieser Filter Kontrolle darüber ob Kommentare (z.B.,
            <command>&lt;!-- ... --&gt;</command>) entfernt werden oder nicht.
        </para>
    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->