<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 14741 -->
<sect1 id="zend.application.theory-of-operation">
    <title>Theory of Operation</title>

    <para>
        Getting an MVC application configured and ready to dispatch has
        required an increasing amount of code as more features become
        available: setting up the database, configuring your view and view
        helpers, configuring your layouts, registering plugins, registering
        action helpers, and more.
    </para>

    <para>
        Additionally, you will often want to reuse the same code to
        bootstrap your tests, a cronjob, or a service script. While it's
        possible to simply include your bootstrap script, oftentimes there
        are initializations that are environment specific â€“ you may not need
        the MVC for a cronjob, or just the DB layer for a service script.
    </para>

    <para>
        <code>Zend_Application</code> aims to make this easier and to
        promote reuse by encapsulating bootstrapping into OOP paradigms.
    </para>

    <para>
        Zend_Application is broken into three realms:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <code>Zend_Application</code>: loads the PHP environment,
                including include_paths and autoloading, and instantiates
                the requested bootstrap class.
            </para>
        </listitem>
        <listitem>
            <para>
                <code>Zend_Application_Bootstrap</code>: provides
                interfaces for bootstrap classes.
                <code>Zend_Application_Bootstrap_Base</code> provides common
                functionality for most bootstrapping needs, including
                dependency checking algorithms and the ability to load
                bootstrap resources on demand.
            </para>
        </listitem>
        <listitem>
            <para>
                <code>Zend_Application_Resource</code> provides an
                interface for standard bootstrapping resources that can be
                loaded on demand by a bootstrap instance, as well as several
                default resource implementations.
            </para>
        </listitem>
    </itemizedlist>

    <para>
        Developers create a bootstrap class for their application, extending
        <code>Zend_Application_Bootstrap_Base</code> or implementing (minimally)
        <code>Zend_Application_Bootstrap_IBootstrap</code>. The entry point
        (e.g., public/index.php) will load <code>Zend_Application</code>,
        and instantiate it by passing:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                The current environment
            </para>
        </listitem>
        <listitem>
            <para>
                Options for bootstrapping
            </para>
        </listitem>
    </itemizedlist>

    <para>
        The bootstrap options include the path to the file containing the
        bootstrap class and optionally:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                Any extra include_paths to set
            </para>
        </listitem>
        <listitem>
            <para>
                Any additional autoloader namespaces to register
            </para>
        </listitem>
        <listitem>
            <para>
                Any php.ini settings to initialize
            </para>
        </listitem>
        <listitem>
            <para>
                The class name for the bootstrap class (if not "Bootstrap")
            </para>
        </listitem>
        <listitem>
            <para>
                Resource prefix/path pairs to use
            </para>
        </listitem>
        <listitem>
            <para>
                Any resources to use (by class name or short name)
            </para>
        </listitem>
        <listitem>
            <para>
                Additional path to a configuration file to load
            </para>
        </listitem>
        <listitem>
            <para>
                Additional configuration options
            </para>
        </listitem>
    </itemizedlist>

    <para>
        Options may be an array, a <code>Zend_Config</code> object, or the path
        to a configuration file.
    </para>
</sect1>
