<!-- EN-Revision: 11146 -->
<sect1 id="zend.form.i18n">
    <title>Internationalisierung von Zend_Form</title>

    <para>
        Immer mehr Entwickler müssen Ihren Inhalt für mehere Sprachen und Regionen zur Verfügung
        stellen. Zend_Form versucht so einen Arbeitsschritt trivial zu machen und verwendet
        Funktionalitäten sowohl in <link linkend="zend.translate">Zend_Translate</link> als auch in
        <link linkend="zend.validate">Zend_Validate</link> um das zu tun.
    </para>

    <para>
        Standardmäßig wird keine Internationalisiernug (I18n) durchgeführt. Um I18n Features in
        <code>Zend_Form</code> einzuschalten, muß ein <code>Zend_Translate</code> Objekt mit einem
        gewünschten Adapter instanziert werden, und es mit <code>Zend_Form</code> und/oder
        <code>Zend_Validate</code> verbunden werden. Siehe in die
        <link linkend="zend.translate">Dokumentation zu Zend_Translate</link> für weitere
        Informationen darüber wie ein Übersetzungsobjekt und Übersetzungsdateien erstellt werden.
    </para>

    <note>
        <title>Die Übersetzung kann für jedes Element einzeln abgeschaltet werden</title>

        <para>
            Übersetzung kann für jede Form, Element, Anzeigegruppe, oder Subform, durch den Aufruf
            dessen <code>setDisableTranslator($flag)</code> Methode oder der Übergabe der
            <code>disableTranslator</code> Option an das Objekt, ausgeschaltet werden. Das kann
            nützlich sein wenn man Übersetzungen selektiv für individuelle Elemente oder Sets von
            Elementen ausschalten will.
        </para>
    </note>

    <sect2 id="zend.form.i18n.initialization">
        <title>I18n in Formen initialisieren</title>

        <para>
            Um I18n in Forms zu initialisieren, muß man entweder ein <code>Zend_Translate</code>
            Objekt oder ein <code>Zend_Translate_Adapter</code> haben, wie in der
            <code>Zend_Translate</code> Dokumentation beschrieben. Soband man ein
            Übersetzungsobjekt hat, besitzt man verschiedene Möglichkeiten:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis>Einfachste:</emphasis> es der Registry hinzufügen. Alle I18n fähigen
                    Komponenten vom Zend Framework erkennen ein Übersetzungsobjekt automatisch
                    wenn es in der Registrierung unter dem 'Zend_Translate' Schlüssel vorhanden ist
                    und verwenden es um eine Übersetzung und/oder Lokalisierung durchzuführen:
                </para>

                <programlisting role="php"><![CDATA[
// verwende den 'Zend_Translate' Schlüssel; $translate ist ein Zend_Translate Objekt:
Zend_Registry::set('Zend_Translate', $translate);
]]>
                </programlisting>

                <para>
                    Das wird von <code>Zend_Form</code>, <code>Zend_Validate</code>, und
                    <code>Zend_View_Helper_Translate</code> aufgegriffen.
                </para>
            </listitem>

            <listitem>
                <para>
                    Wenn man besorgt ist wegen der Übersetzung von Prüf-Fehlermeldungen, kann das
                    Übersetzungsobjekt in <code>Zend_Validate_Abstract</code> registriert werden:
                </para>

                <programlisting role="php"><![CDATA[
// Allen Prüfklassen mitteilen das ein spezieller Übersetzungsadapter verwendet werden soll:
Zend_Validate_Abstract::setDefaultTranslator($translate);
]]>
                </programlisting>
            </listitem>

            <listitem>
                <para>
                    Alternativ kann das <code>Zend_Form</code> Objekt als globaler Übersetzer
                    angefügt werden. Das hat auch einen Nebeneffekt auf die Übersetzung von
                    Fehlermeldungen:
                </para>

                <programlisting role="php"><![CDATA[
// Allen Form Klassen mitteilen das ein spezieller Übersetzungsadapter
// verwendet werden soll, sowie das der Adapter für die Übersetzung von
// Fehlermeldungen verwendet werden soll:
Zend_Form::setDefaultTranslator($translate);
]]>
                </programlisting>
            </listitem>

            <listitem>
                <para>
                    Letztendlich kann ein Übersetzer mit einer speziellen Instanz einer Form
                    verbunden werden oder zu einem speziellen Element indem dessen
                    <code>setTranslator()</code> Methode verwendet wird:
                </para>

                <programlisting role="php"><![CDATA[
// *Dieser* Form Klassen mitteilen das ein spezieller Übersetzungsadapter
// verwendet werden soll, sie wird auch für die Übersetzung von allen
// Prüf-Fehlermeldungen für alle Elemente verwendet:
$form->setTranslator($translate);

// *Diesem* Element mitteilen das ein spezieller Übersetzungsadapter
// verwendet werden soll, sie wird auch für die Übersetzung von allen
// Prüf-Fehlermeldungen für dieses Elemente verwendet:
$element->setTranslator($translate);
]]>
                </programlisting>
            </listitem>
        </itemizedlist>
    </sect2>

    <sect2 id="zend.form.i18n.standard">
        <title>Standard I18n Ziele</title>

        <para>
            Was kann nun standardmäßig übersetzt werden nachdem nun ein Übersetzungs Objekt
            angehängt wurde?
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis>Prüfungs Fehlermeldungen.</emphasis> Prüfungs Fehlermeldungen können
                    übersetzt werden. Um das zu tun, müssen die verschiedenen Konstanten der
                    Fehlercodes von den <code>Zend_Validate</code> Prüfungsklassen als
                    Message IDs verwendet werden. Für weitere Details über diese Codes kann in die
                    Dokumentation zu <link linkend="zend.validate">Zend_Validate</link> gesehen
                    werden.
                </para>

                <para>
                    Zusätzlich können ab 1.6.0 Übersetzungen angegeben werden indem die aktuelle
                    Fehlermeldung als Identifikator der Meldung verwendet wird. Das ist die bevorzugte
                    Verwendung  für 1.6.0 und höher, da die Übersetzung der Nachrichtenschlüssel in
                    zukünftigen Releases als depreciated sein wird.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis>Labels.</emphasis> Element Labels werden übersetzt wenn eine
                    Übersetzung existiert.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis>Fieldset Legenden.</emphasis> Anzeigegruppen und Unterformen werden
                    standardmäßig in Fieldsets dargestellt. Der Fieldset Dekorator versucht die
                    Legende zu übersetzen bevor das Fieldset dargestellt wird.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis>Form und Element Beschreibungen.</emphasis> Alle Formtypen (Element,
                    Form, Anzeigegruppen, Unterformen) erlauben die Spezifikation von optionalen
                    Elementbeschreibungen. Der Beschreibungs Dekorator kann verwendet werden um
                    Sie darzustellen und standardmäßig nimmt er den Wert und versucht Ihn zu
                    übersetzen.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis>Multi-Option Werte.</emphasis> Für die verschiedenen Elemente die von
                    <code>Zend_Form_Element_Multi</code> abgeleitet sind (enthält die
                    MultiCheckbox, Multiselect, und Radio Elemente), werden die Optionswerte
                    (nicht die Schlüssel) übersetzt wenn eine Übersetzung vorhanden ist; das
                    bedeutet das die Label der vorhandenen Optionen die dem Benutzer angezeigt
                    werden, übersetzt werden.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis>Submit und Button Labels.</emphasis> Die verschiedenen Submit und
                    Button Elemente (Button, Submit und Reset) übersetzen das Label das dem
                    Benutzer angezeigt wird.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 tw=80 et:
-->
