<!-- EN-Revision: 11089 -->
<sect1 id="zend.paginator.advanced">
    <title>Advanced usage</title>

    <sect2 id="zend.paginator.advanced.adapters">
        <title>Eigene Adapter für Quelldaten</title>

        <para>
            An irgendeinem Punkt kann es passieren das man auf einen Datentyp stößt der nicht von den
            mitgelieferten Adaptern abgedeckt wird. In diesem Fall muß man seinen eigenen schreiben.
        </para>

        <para>
            Um das zu tun, muß man <code>Zend_Paginator_Adapter_Interface</code> implementieren. Es gibt
            zwei Methoden die hierfür benötigt werden:
        </para>

        <itemizedlist>
            <listitem>
                <para>count()</para>
            </listitem>
            <listitem>
                <para>getItems($offset, $itemCountPerPage)</para>
            </listitem>
        </itemizedlist>

        <para>
            Zusätzlich kann es gewünscht sein einen Konstruktor zu implementieren der die Datenquelle als
            Parameter entgegennimmt und als geschützte oder private Eigenschaft abspeichert. Wie man das
            realisieren will liegt komplett in Eigenverantwortung.
        </para>

        <para>
            Wenn man jemals schon das SPL Interface
            <ulink url="http://www.php.net/~helly/php/ext/spl/interfaceCountable.html"><code>Countable</code></ulink>
            verwendet hat, wird man mit <code>count()</code> umgehen können. <code>Zend_Paginator</code> verwendet
            es als totale Anzahl an Elementen in der Datensammlung.
        </para>

        <para>
            Die <code>getItems()</code> Methode ist nur etwas komplizierter. Hierfür, wird der Adapter mit einem
            Offset und der Anzahl an Einträgen die pro Seite dargestellt werden sollen, gefüttert. Man muß den
            entsprechenden Bereich an Daten zurückgeben. Für ein Array wurde das wie folgt funktionieren:
        </para>

        <para>
            <programlisting role="php"><![CDATA[
return array_slice($this->_array, $offset, $itemCountPerPage);
]]>
            </programlisting>
        </para>

        <para>
            Man sollte einen Blick auf die mitgelieferten Adapter werfen (alle welche
            <code>Zend_Paginator_Adapter_Interface</code> implementieren) um eine Idee zu bekommen wie man das
            selbst implementieren könnte.
        </para>
    </sect2>

    <sect2 id="zend.paginator.advanced.scrolling-styles">
        <title>Eigene Scrolling Stile</title>

        <para>
            Das Erstellen von eigenen Scrolling Stilen erfordert das man
            <code>Zend_Paginator_ScrollingStyle_Interface</code> implementiert, welche eine eizelne Methode,
            <code>getPages()</code>, definiert. Speziell,
        </para>

        <para>
            <programlisting role="php"><![CDATA[
public function getPages(Zend_Paginator $paginator, $pageRange = null);
]]>
            </programlisting>
        </para>
        
        <para>
            Diese Methode sollten eine untere und obere Grenze für die Seitenzahl innerhalb der sogenannten
            "lokalen" Seiten berechnen (das sind Seiten nahe der aktuellen Seite).
        </para>
        
        <para>
            Solange es keinen anderen Scrolling Stil erweitert (siehe zum Beispiel
            <code>Zend_Paginator_ScrollingStyle_Elastic</code>, wird der eigene Scrolling Stil üblicherweise mit
            etwas ähnlichem sie der folgenden Codezeile enden:
        </para>
        
        <para>
            <programlisting role="php"><![CDATA[
return $paginator->getPagesInRange($lowerBound, $upperBound);
]]>
            </programlisting>
        </para>
        
        <para>
            Es ist nichts speziellen an diesem Aufruf; es ist mehr eine übliche Methode um die Gültigkeit der
            unteren und oberen Grenze zu prüfen und ein Array des Bereichs an den Paginator zurückzugeben.
        </para>
        
        <para>
            Wenn man bereit ist den neuen Scrolling Stil zu benutzen, muß man <code>Zend_Paginator</code>
            bekanntgeben in welchem Verzeichnis er nachschauen muß. Um das zu tun muß das folgende ausgeführt
            werden:
        </para>
        
        <para>
            <programlisting role="php"><![CDATA[
$prefix = 'My_Paginator_ScrollingStyle';
$path   = 'My/Paginator/ScrollingStyle/';
Zend_Paginator::addScrollingStylePrefixPath($prefix, $path);
]]>
            </programlisting>
        </para>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->