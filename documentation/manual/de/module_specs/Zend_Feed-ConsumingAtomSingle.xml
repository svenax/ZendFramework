<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 14978 -->
<!-- Reviewed: no -->
<sect1 id="zend.feed.consuming-atom-single-entry">
    <title>Einen einzelnen Atom Eintrag konsumieren</title>

    <para>
        Einzelne Atom <code>&lt;entry&gt;</code> Elemente sind auch für sich selber gültig.
        Normalerweise ist die URL für einen Eintrag die URL des Feeds gefolgt von
        <code>/&lt;entryId&gt;</code>, wie bei <code>http://atom.example.com/feed/1</code>, um
        das obige Beispiel zu verwenden.
    </para>

    <para>
        Wenn Du einen einzelnen Eintrag liest, wirst du dennoch ein <classname>Zend_Feed_Atom</classname>
        Objekt erhalten, aber es wird automatisch ein "anonymer" Feed erstellt, welcher den Eintrag
        enthält.
    </para>

    <example id="zend.feed.consuming-atom-single-entry.example.atom">
        <title>Lesen eines Atom Feeds mit einem Eintrag</title>
        <programlisting role="php"><![CDATA[
$feed = new Zend_Feed_Atom('http://atom.example.com/feed/1');
echo 'Der Feed hat: ' . $feed->count() . ' Eintrag.';

$entry = $feed->current();
]]>
        </programlisting>
    </example>

    <para>
        Alternativ kannst du das Objekt für den Eintrag auch direkt instanziieren, wenn du weist,
        dass du ein Dokument mit nur einem Eintrag abrufst:
    </para>

    <example id="zend.feed.consuming-atom-single-entry.example.entryatom">
        <title>Direkte Verwendung des Eintragsobjekts für einen Atom Feed mit nur einem Eintrag</title>
        <programlisting role="php"><![CDATA[
$entry = new Zend_Feed_Entry_Atom('http://atom.example.com/feed/1');
echo $entry->title();
]]>
        </programlisting>
    </example>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->