<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 21762 -->
<!-- Reviewed: no -->
<sect1 id="zend.validate.set" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Standard Prüfklassen</title>

    <para>
        Zend Framework kommt mit einem Standardset von Prüfklassen, welche fertig zur Verwendung
        sind.
    </para>

    <sect2 id="zend.validate.set.alnum">
        <title>Alnum</title>

        <para>
            Gibt nur dann <constant>TRUE</constant> zurück wenn <varname>$value</varname> nur
            alphabetische und digitale Zeichen enthält. Dieser Prüfer enthält eine Option um
            auszuwählen ob Leerzeichen als gültig anzusehen sind.
        </para>

        <note>
            <para>
                Alphabetische Zeichen bedeuten Zeichen die in jeder Spache Wörter bilden. Trotzdem
                wird das englische Alphabet in den folgenden Sprachen für alphabethische Zeichen
                verwendet: Chinesisch, Japanisch, Koreanisch. Die Sprache wurde von
                <classname>Zend_Locale</classname> spezifiziert.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.validate.set.alpha">
        <title>Alpha</title>

        <para>
            Gibt nur dann <constant>TRUE</constant> zurück wenn <varname>$value</varname> nur
            alphabetische Zeichen enthält. Dieser Prüfer enthält eine Option um auszuwählen ob
            Leerzeichen als gültig anzusehen sind.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-Barcode.xml" />
    <xi:include href="Zend_Validate-Between.xml" />
    <xi:include href="Zend_Validate-Callback.xml" />
    <xi:include href="Zend_Validate-CreditCard.xml" />

    <sect2 id="zend.validate.set.ccnum">
        <title>Ccnum</title>

        <note>
            <para>
                Die <classname>Ccnum</classname> Prüfung sollte nicht mehr eingesetzt werden.
                Stattdessen sollte man die <classname>CreditCard</classname> Prüfung verwenden.
                Aus Gründen der Sicherheit sollte man CreditCard statt Ccnum verwenden.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.validate.set.date">
        <title>Date</title>

        <para>
            Gibt nur dann <constant>TRUE</constant> zurück wenn <varname>$value</varname> ein
            gültiges Datum im Format 'YYYY-MM-DD' ist. Wenn die optionale
            <property>locale</property> Option gesetzt ist, dann wird das Datum entsprechend dem
            gesetzten Gebietsschemas geprüft. Und wenn die optionale <property>format</property>
            Option gesetzt wird, dann wird dieses Format für die Prüfung herangezogen. Für Details
            über die optionalen Parametern siehe <link
                linkend="zend.date.others.comparison.table">Zend_Date::isDate()</link>.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-Db.xml" />
    <xi:include href="Zend_Validate-Digits.xml" />
    <xi:include href="Zend_Validate-EmailAddress.xml" />

    <sect2 id="zend.validate.set.float">
        <title>Float</title>

        <para>
            Gibt nur dann <constant>TRUE</constant> zurück wenn <varname>$value</varname> ein
            Fließkomma Wert ist. Seit Zend Framework 1.8 verwendet diese Prüfung auch das aktuelle
            Gebietsschema des Browsers, der Umgebung oder eines anwendungsweit gesetzten
            Gebietsschemas. Man kann natürlich die Zugriffsmethoden get/setLocale verwenden um das
            verwendete Gebietsschema zu verändern oder es bei der Erstellung einer Instanz dieser
            Prüfung angeben.
        </para>
    </sect2>

    <xi:include href="Zend_Validate-GreaterThan.xml" />
    <xi:include href="Zend_Validate-Hex.xml" />
    <xi:include href="Zend_Validate-Hostname.xml" />
    <xi:include href="Zend_Validate-Iban.xml" />
    <xi:include href="Zend_Validate-Identical.xml" />
    <xi:include href="Zend_Validate-InArray.xml" />
    <xi:include href="Zend_Validate-Int.xml" />
    <xi:include href="Zend_Validate-Isbn.xml" />
    <xi:include href="Zend_Validate-Ip.xml" />
    <xi:include href="Zend_Validate-LessThan.xml" />
    <xi:include href="Zend_Validate-NotEmpty.xml" />
    <xi:include href="Zend_Validate-PostCode.xml" />
    <xi:include href="Zend_Validate-Regex.xml" />
    <xi:include href="Zend_Validate-Sitemap.xml" />
    <xi:include href="Zend_Validate-StringLength.xml" />
</sect1>
