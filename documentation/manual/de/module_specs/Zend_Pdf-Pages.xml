<!-- EN-Revision: 11090 -->
<sect1 id="zend.pdf.pages">
    <title>Dokument Seiten</title>
    <sect2 id="zend.pdf.pages.creation">
        <para>
            Die Abstraktion von PDF Dokumentseiten wird durch die Klasse <code>Zend_Pdf_Page</code>
            abgebildet.
        </para>

        <para>
            PDF Seiten werden entweder aus einem vorhandenen PDF gelesen oder erstellt.
        </para>

        <para>
            Neue Seiten können durch die Erstellung eines neuen <code>Zend_Pdf_Page</code> Objektes
            oder durch den Aufruf der <code>Zend_Pdf::newPage()</code> Methode erhalten werden, die ein
            <code>Zend_Pdf_Page</code> Objekt zurückgibt. Der Unterschied ist, dass die
            <code>Zend_Pdf::newPage()</code> Methode eine Seite erstellt, die bereits an das vorhandene
            Dokument angehängt worden ist. Im Gegensatz dazu können ungebundene Seiten bei verschiedenen
            PDF Dokumenten verwendet werden und sind ein wenig performanter
            <footnote>
                <para>
                Dies ist eine Einschränkung der V1.0 Version der Zend_Pdf Komponente. Sie wird in
                zukünftigen Versionen beseitigt werden. Aber ungebundene Seiten werden immer ein
                besseres (also optimaleres) Ergebnis für gemeinsame Benutzung in Dokumenten liefern.
                </para>
            </footnote>. Du hast die Wahl, welche Vorgehensweise verwendet werden sollte.
        </para>

        <para>
            Die <code>Zend_Pdf::newPage()</code> Methode und der <code>Zend_Pdf_Page</code> Konstruktor
            benötigen die gleichen Parameter welche die Größe der Seite spezifizieren. Das ist entweder
            die Seitengröße ($x, $y) in Punkten (1/72 Zoll) oder eine vordefinierte Konstante, die als
            Seitentyp verwendet wird:
            <itemizedlist>
                <listitem>
                    <para>Zend_Pdf_Page::SIZE_A4</para>
                </listitem>
                <listitem>
                    <para>Zend_Pdf_Page::SIZE_A4_LANDSCAPE</para>
                </listitem>
                <listitem>
                    <para>Zend_Pdf_Page::SIZE_LETTER</para>
                </listitem>
                <listitem>
                    <para>Zend_Pdf_Page::SIZE_LETTER_LANDSCAPE</para>
                </listitem>
            </itemizedlist>
        </para>

        <para>
            Dokumentseiten werden in der öffentlichen Eigenschaft <code>$pages</code> der
            <code>Zend_Pdf</code> Klasse abgelegt. Dies ist ein Array mit <code>Zend_Pdf_Page</code>
            Objekten. Es definiert den Satz und die Reihenfolge der Dokumentseiten und kann
            wie ein normales Array verändert werden:
        </para>

        <example id="zend.pdf.pages.example-1">
            <title>Verwaltung von PDF Dokumentseiten</title>
            <programlisting role="php"><![CDATA[
...
// Umgekehrte Seitenreihenfolge
$pdf->pages = array_reverse($pdf->pages);
...
// Füge eine neue Seite hinzu
$pdf->pages[] = new Zend_Pdf_Page(Zend_Pdf_Page::SIZE_A4);
// Füge eine neue Seite hinzu
$pdf->pages[] = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);

// Entferne eine bestimmte Seite
unset($pdf->pages[$id]);

...
]]>
            </programlisting>
        </example>
    </sect2>

    <sect2 id="zend.pdf.pages.cloning">
        <title>Klonen von Seiten</title>
        <para>
            Bestehende PDF Seiten können durch das Erstellen eines neuen <code>Zend_Pdf_Page</code> Objektes
            geklont werden indem eine existierende Seite als Parameter angegeben wird:
        </para>

        <example id="zend.pdf.pages.example-2">
            <title>Klonen bestehender Seiten</title>
            <programlisting role="php"><![CDATA[
...
// Die Template Seite in einer seperaten Variable speichern
$template = $pdf->pages[$templatePageIndex];
...
// Neue Seite hinzufügen
$page1 = new Zend_Pdf_Page($template);
$pdf->pages[] = $page1;
...

// Andere Seite hinzufügen
$page2 = new Zend_Pdf_Page($template);
$pdf->pages[] = $page2;
...

// Die Quell Template Seite von den Dokumenten entfernen
unset($pdf->pages[$templatePageIndex]);

...
]]>
            </programlisting>
        </example>

        <para>
            Das ist nützlich wenn verschiedene Seite mit Hilfe eines Templates erstellt werden sollen. 
        </para>

        <caution>
            <para>
                Wichtig! Geklonte Seiten verwenden die gleichen PDF Ressourcen mit der Template Seite.
                Diese kann also nur innerhalb des gleichen Dokuments als Template Seite verwendet werden.
                Modifizierte Dokumente können als neue abgespeichert werden.
            </para>
        </caution>
    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->