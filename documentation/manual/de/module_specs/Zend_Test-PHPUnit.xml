<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 17175 -->
<!-- Reviewed: no -->
<sect1 id="zend.test.phpunit" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Zend_Test_PHPUnit</title>

    <para>
        <classname>Zend_Test_PHPUnit</classname> bietet einen TestCase, für <acronym>MVC</acronym>
        Anwendungen die Behauptungen enthalten, für das Testen einer Vielzahl an Möglichkeiten. Der
        warscheinlich einfachste Weg um zu verstehen was das ist, ist das ansehen des folgenden
        Beispiels.
    </para>

    <example id="zend.test.phpunit.loginexample">
        <title>Beispiel eines TestCases für ein Anwendungs Login</title>

        <para>
            Das folgende ist ein einfacher TestCase für einen <code>UserController</code> um
            verschiedene Dinge zu prüfen:
        </para>

        <itemizedlist>
            <listitem><para>
                Die Login Form sollte nicht-authenthifizierten Benutzern angezeigt werden.
            </para></listitem>

            <listitem><para>
                Wenn sich ein Benutzer einloggt, sollte er zu seiner Profilseite umgeleitet werden,
                und diese Profilseite sollte relevante Informationen enthalten.
            </para></listitem>
        </itemizedlist>

        <para>
            Dieses spezielle Beispiel nimmt ein paar Dinge an. Erstens schieben wird das meiste
            unseres Bootstrappings in ein Plugin. Das vereinfacht das Setup des TestCases da es uns
            erlaubt unsere Umgebung geziehlt zu spezifizieren, und es uns ausserdem erlaubt die
            Anwendung in einer einzigen Zeile zu starten. Unser spezielles Beispiel nimmt auch an
            das das Setup automatisch lädt sodas wir uns nicht um das laden der betreffenden Klassen
            kümmern müssen (wie die richtigen Controller, Plugins, usw).
        </para>

        <programlisting language="php"><![CDATA[
class UserControllerTest extends Zend_Test_PHPUnit_ControllerTestCase
{
    public function setUp()
    {
        $this->bootstrap = array($this, 'appBootstrap');
        parent::setUp();
    }

    public function appBootstrap()
    {
        $this->frontController
             ->registerPlugin(new Bugapp_Plugin_Initialize('development'));
    }

    public function testCallWithoutActionShouldPullFromIndexAction()
    {
        $this->dispatch('/user');
        $this->assertController('user');
        $this->assertAction('index');
    }

    public function testIndexActionShouldContainLoginForm()
    {
        $this->dispatch('/user');
        $this->assertAction('index');
        $this->assertQueryCount('form#loginForm', 1);
    }

    public function testValidLoginShouldGoToProfilePage()
    {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'username' => 'foobar',
                  'password' => 'foobar'
              ));
        $this->dispatch('/user/login');
        $this->assertRedirectTo('/user/view');

        $this->resetRequest()
             ->resetResponse();
        $this->request->setMethod('GET')
             ->setPost(array());
        $this->dispatch('/user/view');
        $this->assertRoute('default');
        $this->assertModule('default');
        $this->assertController('user');
        $this->assertAction('view');
        $this->assertNotRedirect();
        $this->assertQuery('dl');
        $this->assertQueryContentContains('h2', 'User: foobar');
    }
}
]]></programlisting>

        <para>
            Dieses Beispiel können auch einfacher geschrieben werden -- nicht alle der gezeigten
            Behauptungen sind notwendig. Hoffentlich zeigt es wie einfach es ist die eigene
            Anwendung zu testen.
        </para>
    </example>

    <xi:include href="Zend_Test-PHPUnit-Bootstrapping.xml" />
    <xi:include href="Zend_Test-PHPUnit-Testing.xml" />
    <xi:include href="Zend_Test-PHPUnit-Assertions.xml" />
    <xi:include href="Zend_Test-PHPUnit-Examples.xml" />
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
