<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 17275 -->
<!-- Reviewed: no -->
<sect1 id="zend.pdf.interactive-features">
    <title>Interaktive Features</title>
    <sect2 id="zend.pdf.pages.interactive-features.destinations">
        <title>Ziele</title>

        <para>
            Ein Ziel definiert eine spezielle Sicht eines Dokuments, bestehend aus den folgenden
            Elementen:
        </para>

        <itemizedlist>
            <listitem>
                <para>Die Seite des Dokuments das angezeigt werden soll.</para>
            </listitem>

            <listitem>
                <para>Der Ort des Dokumenten Fensters auf dieser Seite.</para>
            </listitem>

            <listitem>
                <para>
                    Der Zoom Faktor der verwendet werden soll wenn die Seite angezeigt wird.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Ziele können mit Outline Elementen ((<link
            linkend="zend.pdf.pages.interactive-features.outlines">Document Outline
                (bookmarks)</link>), Hinweisen (<link
                linkend="zend.pdf.pages.interactive-features.annotations">Annotations</link>), oder
            Aktionen (<link linkend="zend.pdf.pages.interactive-features.actions">Actions</link>)
            verknüpft werden. In jedem Fall spezifiziert das Ziel die Sicht des Dokuments welche
            dargestellt werden soll wenn das Outline Element oder der Hinweis geöffnet, oder die
            Aktion durchgeführt werden soll. Zusätzlich kann eine optionale Dokument Öffnungs-Aktion
            spezifiziert werden.
        </para>

        <sect3 id="zend.pdf.pages.interactive-features.destinations.types">
            <title>Unterstützte Zieltypen</title>

            <para>
                Die folgenden Typen werden von der <classname>Zend_Pdf</classname> Komponente
                unterstützt.
            </para>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.zoom">
                <title>Zend_Pdf_Destination_Zoom</title>

                <para>
                    Zeigt die spezifizierte Seite, mit den Koordinaten (Links, Oben) positioniert
                    an der oberen-linken Ecke des Fensters und dem Inhalt der Seite vergrößert
                    auf den Zoom Faktor.
                </para>

                <para>
                    Zielobjekte können durch Verwendung der
                    <methodname>Zend_Pdf_Destination_Zoom::create($page, $left = null, $top = null,
                        $zoom = null)</methodname> Methode erstellt werden.
                </para>

                <para>
                    Wobei:
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> eine Zielseite ist (ein
                            <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitennummer).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$left</varname> ist die linke Ecke der angezeigten Seite
                            (float).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$top</varname> ist eine obere Ecke der angezeigten Seite
                            (float).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$zoom</varname> ist ein Zoom Faktor (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                   <constant>NULL</constant>, wenn es für die <varname>$left</varname>,
                   <varname>$top</varname> or <varname>$zoom</varname> Parameter spezifiziert wird,
                   heißt "aktueller Wert der Viewer Anwendung".
                </para>

                <para>
                    Die <classname>Zend_Pdf_Destination_Zoom</classname> Klasse bietet die folgenden
                    Methoden an:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getLeftEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setLeftEdge(float $left)</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><type>Float</type><methodname>getTopEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setTopEdge(float $top)</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><type>Float</type><methodname>getZoomFactor()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setZoomFactor(float $zoom)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.fit">
                <title>Zend_Pdf_Destination_Fit</title>

                <para>
                    Zeigt die spezifizierte Seite an, wobei der Inhalt soweit vergrössert wird,
                    dass er auf die komplette Seite passt sowohl Horizontal als auch Vertikal im
                    Fenster. Wenn die benötigten horizontalen und vertikalen Vergrösserungsfaktoren
                    unterschiedlich sind, wird der kleinere der zwei verwendet, und die Seite im
                    Fenster mit der anderen Dimension zentriert.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_Fit::create($page)</methodname> Methode
                    verwendet wird.
                </para>

                <para>
                    Wobei <varname>$page</varname> eine Zielseite ist (ein
                    <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitennummer).
                </para>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.fit-horizontally">
                <title>Zend_Pdf_Destination_FitHorizontally</title>

                <para>
                    Zeigt die spezifizierte Seite, mit den vertikalen Koordinaten an der oberen Ecke
                    des Fensters positioniert, an und den Inhalt der Seite gerade genug vergrössert
                    damit die komplette Breite der Seite in das Fenster passt.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitHorizontally::create($page,
                        $top)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei:
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> ist eine Zielseite
                            (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$top</varname> ist die obere Ecke der angezeigten Seite
                            (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                    Die Klasse <classname>Zend_Pdf_Destination_FitHorizontally</classname> bietet
                    auch die folgenden Methoden:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getTopEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setTopEdge(float $top)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.fit-vertically">
                <title>Zend_Pdf_Destination_FitVertically</title>

                <para>
                    Zeigt die spezifizierte Seite, mit den horizontalen Koordinaten an der oberen
                    Ecke des Fensters positioniert, an und den Inhalt der Seite gerade genug
                    vergrössert damit die komplette Höhe der Seite in das Fenster passt.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitVertically::create($page,
                        $left)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei:
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> ist eine Zielseite
                            (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$left</varname> die linke Ecke der angezeigten Seite ist.
                            (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                    Die Klasse <classname>Zend_Pdf_Destination_FitVertically</classname> bietet auch
                    die folgenden Methoden:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getLeftEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setLeftEdge(float $left)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.fit-rectangle">
                <title>Zend_Pdf_Destination_FitRectangle</title>

                <para>
                    Zeigt die spezifizierte Seite an, wobei der Inhalt gerade genug vergrössert ist
                    damit er komplett in das Rechteck passt das durch die Koordinaten links, unten,
                    rechts und oben spezifiziert wird sowohl horizontal als auch vertikal. Wenn die
                    notwendigen horizontalen und vertikalen Vergrösserungsfaktoren unterschiedlich
                    sind, wird der kleinere der zwei verwendet, wobei das Rechteck im Fenster durch
                    Verwendung der andern Dimension zentriert wird.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitRectangle::create($page, $left, $bottom,
                        $right, $top)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei:
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> ist eine Zielseite
                            (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$left</varname> die linke Ecke der angezeigten Seite ist.
                            (float).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$bottom</varname> die untere Ecke der angezeigten Seite ist
                            (float).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$right</varname> die rechte Ecke der angezeigten Seite ist
                            (float).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$top</varname> die obere Ecke der angezeigten Seite ist
                            (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                    Die Klasse <classname>Zend_Pdf_Destination_FitRectangle</classname> bietet auch
                    die folgenden Methoden an:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getLeftEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setLeftEdge(float $left)</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><type>Float</type><methodname>getBottomEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setBottomEdge(float $bottom)</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><type>Float</type><methodname>getRightEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setRightEdge(float $right)</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><type>Float</type><methodname>getTopEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setTopEdge(float $top)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.fit-bounding-box">
                <title>Zend_Pdf_Destination_FitBoundingBox</title>

                <para>
                    Zeigt die spezifizierte Seite an, wobei der Inhalt gerade genug vergrössert ist
                    damit die Zeichenbox komplett in das Fenster passt, sowohl horizontal als auch
                    vertikal. Wenn die notwendigen horizontalen und vertikalen
                    Vergrösserungsfaktoren unterschiedlich sind, wird der kleinere der zwei
                    verwendet, wobei die Zeichenbox im Fenster durch Verwendung der andern Dimension
                    zentriert wird.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitBoundingBox::create($page, $left, $bottom,
                        $right, $top)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei <varname>$page</varname> eine Zielseite ist
                    (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                </para>
            </sect4>

            <sect4
                id="zend.pdf.pages.interactive-features.destinations.types.fit-bounding-box-horizontally">
                <title>Zend_Pdf_Destination_FitBoundingBoxHorizontally</title>

                <para>
                    Zeigt die spezifizierte Seite, mit den vertikalen Koordinaten an der oberen Ecke
                    des Fensters positioniert, an und den Inhalt der Seite gerade genug vergrössert
                    damit die komplette Breite der Zeichenbox in das Fenster passt.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitBoundingBoxHorizontally::create($page,
                        $top)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> eine Zielseite ist
                            (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$top</varname> ist die obere Ecke der angezeigten Seite
                            (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                    Die Klasse
                    <classname>Zend_Pdf_Destination_FitBoundingBoxHorizontally</classname> bietet
                    auch die folgenden Methoden:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getTopEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setTopEdge(float $top)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4
                id="zend.pdf.pages.interactive-features.destinations.types.fit-bounding-box-vertically">
                <title>Zend_Pdf_Destination_FitBoundingBoxVertically</title>

                <para>
                    Zeigt die spezifizierte Seite, mit den horizontalen Koordinaten an der oberen
                    Ecke des Fensters positioniert, an und den Inhalt der Seite gerade genug
                    vergrössert damit die komplette Höhe der Zeichenbox in das Fenster passt.
                </para>

                <para>
                    Das Zielobjekt kann erstellt werden indem die
                    <methodname>Zend_Pdf_Destination_FitBoundingBoxVertically::create($page,
                        $left)</methodname> Methode verwendet wird.
                </para>

                <para>
                    Wobei
                </para>

                <itemizedlist>
                    <listitem>
                        <para>
                            <varname>$page</varname> eine Zielseite ist
                            (ein <classname>Zend_Pdf_Page</classname> Objekt oder eine Seitenzahl).
                        </para>
                    </listitem>

                    <listitem>
                        <para>
                            <varname>$left</varname> ist die linke Ecke der angezeigten Seite
                            (float).
                        </para>
                    </listitem>
                </itemizedlist>

                <para>
                    Die Klasse <classname>Zend_Pdf_Destination_FitBoundingBoxVertically</classname>
                    bietet auch die folgenden Methoden:
                </para>

                <itemizedlist>
                    <listitem>
                        <para><type>Float</type><methodname>getLeftEdge()</methodname>;</para>
                    </listitem>

                    <listitem>
                        <para><methodname>setLeftEdge(float $left)</methodname>;</para>
                    </listitem>
                </itemizedlist>
            </sect4>

            <sect4 id="zend.pdf.pages.interactive-features.destinations.types.named">
                <title>Zend_Pdf_Destination_Named</title>

                <para>
                    Alle oben aufgeführten Ziele sind "Explizite Ziele".
                </para>

                <para>
                    Zusätzlich dazu können <acronym>PDF</acronym> Dokumente ein Verzeichnis solcher
                    Ziele enthalten welche verwendet werden können um nach ausserhalb des
                    <acronym>PDF</acronym>'s zu referenzieren (z.B.
                    '<filename>http://www.mycompany.com/document.pdf#chapter3</filename>').
                </para>

                <para>
                    <classname>Zend_Pdf_Destination_Named</classname> Objekte erlauben es auf Ziele
                    der benannten Zielverzeichnisse des Dokuments zu referenzieren.
                </para>

                <para>
                    Benannte Zielobjekte können erstellt werden indem man die
                    <methodname>Zend_Pdf_Destination_Named::create(string $name)</methodname>
                    Methode verwendet.
                </para>

                <para>
                    Die Klasse <classname>Zend_Pdf_Destination_Named</classname> bietet eine einzige
                    zusätzliche Methode:
                </para>

                <para>
                    <type>String</type><methodname>getName()</methodname>;
                </para>
            </sect4>
        </sect3>

        <sect3 id="zend.pdf.pages.interactive-features.destinations.processing">
            <title>Verarbeitung von Zielen auf Level des Dokuments</title>

            <para>
                Die Klasse <classname>Zend_Pdf</classname> bietet ein Set von Methoden zur
                Verarbeitung von Zielen.
            </para>

            <para>
                Jedes Zielobjekt (inklusive benannter Ziele) kann aufgelöst werden indem die
                Methode <methodname>resolveDestination($destination)</methodname> verwendet wird.
                Sie gibt ein passendes <classname>Zend_Pdf_Page</classname> Objekt zurück wenn das
                Zielobjekt gefunden wurde, andernfalls <constant>NULL</constant>.
            </para>

            <para>
                Die Methode <methodname>Zend_Pdf::resolveDestination()</methodname> nimmt auch einen
                optionalen booleschen Parameter <varname>$refreshPageCollectionHashes</varname>, der
                standardmäßig true ist. Er zwingt das <classname>Zend_Pdf</classname> Objekt die
                Hashes der internen Kollektion der Seiten neu zu laden da die Liste der Seiten des
                Dokuments vom Benutzer aktualisiert sein könnte indem die Eigenschaft
                <varname>Zend_Pdf::$pages</varname> verwendet wird
                (<link linkend="zend.pdf.pages">Arbeiten mit Seiten</link>). Das kann aus Gründen
                der Performance ausgeschaltet werden, wenn bekannt ist das die Liste der Seiten des
                Dokuments seit der letzten Anfragemethode nicht geändert wurde.
            </para>

            <para>
                Die komplette Liste der benannten Ziele kann empfangen werden indem die Methode
                <methodname>Zend_Pdf::getNamedDestinations()</methodname> verwendet wird. Sie gibt
                ein Array von <classname>Zend_Pdf_Target</classname> Objekten zurück, welche
                entweder explizite Ziele oder eine GoTo Aktion sind
                (<link linkend="zend.pdf.pages.interactive-features.actions">Aktionen</link>).
            </para>

            <para>
                Die Methode <methodname>Zend_Pdf::getNamedDestination(string $name)</methodname>
                gibt spezifizierte benannte Ziele zurück (ein explizites Ziel oder eine GoTo
                Aktion).
            </para>

            <para>
                Das Verzeichnis der benannten Ziele des <acronym>PDF</acronym> Dokuments kann mit
                der Methode
                <methodname>Zend_Pdf::setNamedDestination(string $name, $destination)</methodname>
                aktualisiert werden, wobei <varname>$destination</varname> entweder ein explizites
                Ziel ist (jedes Ziel ausser <classname>Zend_Pdf_Destination_Named</classname>) oder
                eine GoTo Aktion.
            </para>

            <para>
                Wenn <constant>NULL</constant> statt <varname>$destination</varname> spezifiziert
                ist, werden die spezifizierten benannten Ziele entfernt.
            </para>

            <note>
                <para>
                    Benannte Ziele die nicht aufgelöst werden können, werden automatisch vom
                    Dokument entfernt wenn das Dokument gespeichert wird.
                </para>
            </note>

            <example id="zend.pdf.interactive-features.destinations.example-1">
                <title>Beispiel für die Verwendung von Zielen</title>

                <programlisting language="php"><![CDATA[
$pdf = new Zend_Pdf();
$page1 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);
$page2 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);
$page3 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);
// Erstellte Seiten, aber nicht in der Seitenliste enthalten

$pdf->pages[] = $page1;
$pdf->pages[] = $page2;

$destination1 = Zend_Pdf_Destination_Fit::create($page2);
$destination2 = Zend_Pdf_Destination_Fit::create($page3);

// Gibt das $page2 Objekt zurück
$page = $pdf->resolveDestination($destination1);

// Gibt null zurück, die Seite 3 ist bis jetzt nicht im Dokument enthalten
$page = $pdf->resolveDestination($destination2);

$pdf->setNamedDestination('Page2', $destination1);
$pdf->setNamedDestination('Page3', $destination2);

// Gibt $destination2 zurück
$destination = $pdf->getNamedDestination('Page3');

// Gibt $destination1 zurück
$pdf->resolveDestination(Zend_Pdf_Destination_Named::create('Page2'));

// Gibt null zurück, die Seite 3 ist bis jetzt nicht im Dokument enthalten
$pdf->resolveDestination(Zend_Pdf_Destination_Named::create('Page3'));
]]></programlisting>
            </example>
        </sect3>
    </sect2>

    <sect2 id="zend.pdf.pages.interactive-features.actions">
        <title>Aktionen</title>

        <para>
            Statt einfach zu einem Ziel im Dokument zu springen, kann ein Hinweis oder Outline
            Element eine Aktion für die Viewer Anwendung spezifizieren die auszuführen ist, wie
            das starten einer Anwendung, das Abspielen eines Sounds, oder der Änderung der
            Sichtweise des Hinweis Status.
        </para>

        <sect3 id="zend.pdf.pages.interactive-features.actions.types">
            <title>Unterstützte Typen von Aktionen</title>

            <para>
                Die folgenden Typen von Aktionen werden beim Laden vom <acronym>PDF</acronym>
                Dokument erkannt:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_GoTo</classname> - geht zu einem Ziel im
                        aktuellen Dokument.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_GoToR</classname> - geht zu einem Ziel in
                        einem anderen Dokument.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_GoToE</classname> - geht zu einem Ziel in
                        einem eingebetteten Dokument.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Launch</classname> - startet eine Anwendung,
                        öffnet oder druckt ein Dokument.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Thread</classname> - beginnt einen Artikel Thread
                        zu lesen.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_URI</classname> - löst ein
                        <acronym>URI</acronym> auf.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Sound</classname> - spielt einen Sound.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Movie</classname> - spielt einen Film.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Hide</classname> - versteckt oder zeigt einen
                        oder mehrere Hinweise auf dem Bildschirm.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Named</classname> - führt eine vordefinierte
                        Aktion an der Viewer Anwendung aus:
                    </para>

                    <itemizedlist>
                        <listitem>
                            <para>
                                <emphasis>NextPage</emphasis> - Geht zur nächsten Seite des
                                Dokuments.
                            </para>
                        </listitem>

                        <listitem>
                            <para>
                                <emphasis>PrevPage</emphasis> - Geht zur vorhergehenden Seite des
                                Dokuments.
                            </para>
                        </listitem>

                        <listitem>
                            <para>
                                <emphasis>FirstPage</emphasis> - Geht zur ersten Seite des
                                Dokuments.
                            </para>
                        </listitem>

                        <listitem>
                            <para>
                                <emphasis>LastPage</emphasis> - Geht zur letzten Seite des
                                Dokuments.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_SubmitForm</classname> - sendet Daten zu einem
                        eindeutigen Ressourcenziel.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_ResetForm</classname> - setzt Felder mit Ihren
                        Standardwerten.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_ImportData</classname> - importiert Feldwerte von
                        einer Datei.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_JavaScript</classname> - führt ein JavaScript
                        Skript aus.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_SetOCGState</classname> - setzt den Status von
                        einem oder mehreren optionalen Inhaltsgruppen.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Rendition</classname> - kontrolliert das
                        Abspielen von Multimedia Inhalten (Beginnen, Stoppen, Pausieren oder
                        Fortsetzen des Abspielens).
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_Trans</classname> - Aktualisiert das Display
                        eines Dokuments indem ein Übersetzungsverzeichnis verwendet wird.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <classname>Zend_Pdf_Action_GoTo3DView</classname> - setzt die aktuelle
                        Ansicht eines 3D Hinweises.
                    </para>
                </listitem>
            </itemizedlist>

            <para>
                Nur <classname>Zend_Pdf_Action_GoTo</classname> Aktionen können aktuell von
                Benutzern erstellt werden. Das kann getan werden indem die Methode
                <methodname>Zend_Pdf_Action_GoTo::create($destination)</methodname> verwendet
                wird wobei <varname>$destination</varname> ein
                <classname>Zend_Pdf_Destination</classname> Objekt oder String ist der verwendet
                werden kann um ein benanntes Ziel zu identifizieren.
            </para>

            <para>
                Es unterstützt auch die folgenden Methoden:
            </para>
        </sect3>

        <sect3 id="zend.pdf.pages.interactive-features.actions.chaining">
            <title>Actions chaining</title>

            <para>
                Actions objects can be chained using <varname>Zend_Pdf_Action::$next</varname>
                public property.
            </para>

            <para>
                It's an array of <classname>Zend_Pdf_Action</classname> objects, which also
                may have their sub-actions.
            </para>

            <para>
                <classname>Zend_Pdf_Action</classname> class supports RecursiveIterator interface,
                so child actions may be iterated recursively:
            </para>

            <programlisting language="php"><![CDATA[
$pdf = new Zend_Pdf();
$page1 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);
$page2 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);
// Page created, but not included into pages list
$page3 = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);

$pdf->pages[] = $page1;
$pdf->pages[] = $page2;

$action1 = Zend_Pdf_Action_GoTo::create(
                            Zend_Pdf_Destination_Fit::create($page2));
$action2 = Zend_Pdf_Action_GoTo::create(
                            Zend_Pdf_Destination_Fit::create($page3));
$action3 = Zend_Pdf_Action_GoTo::create(
                            Zend_Pdf_Destination_Named::create('Chapter1'));
$action4 = Zend_Pdf_Action_GoTo::create(
                            Zend_Pdf_Destination_Named::create('Chapter5'));

$action2->next[] = $action3;
$action2->next[] = $action4;

$action1->next[] = $action2;

$actionsCount = 1; // Note! Iteration doesn't include top level action and
                   // walks through children only
$iterator = new RecursiveIteratorIterator(
                                        $action1,
                                        RecursiveIteratorIterator::SELF_FIRST);
foreach ($iterator as $chainedAction) {
    $actionsCount++;
}
printf("Actions in a tree: %d\n", $actionsCount++); // Prints 'Actions in a tree: 4'
]]></programlisting>
        </sect3>

        <sect3 id="zend.pdf.pages.interactive-features.actions.open-action">
            <title>Document Open Action</title>

            <para>
                Special open action may be specify a destination to be displayed or an action
                to be performed when the document is opened.
            </para>

            <para>
                <methodname>Zend_Pdf_Target Zend_Pdf::getOpenAction()</methodname> method
                returns current document open action (or null if open action is not set).
            </para>

            <para>
                <methodname>setOpenAction(Zend_Pdf_Target $openAction = null)</methodname>
                method sets document open action or clean it if <varname>$openAction</varname>
                is null.
            </para>
        </sect3>
    </sect2>

    <sect2 id="zend.pdf.pages.interactive-features.outlines">
        <title>Document Outline (bookmarks)</title>
        <para>
            A PDF document may optionally display a document outline on the screen, allowing
            the user to navigate interactively from one part of the document to another.
            The outline consists of a tree-structured hierarchy of outline items (sometimes
            called bookmarks), which serve as a visual table of contents to display the document’s
            structure to the user. The user can interactively open and close individual
            items by clicking them with the mouse. When an item is open, its immediate children
            in the hierarchy become visible on the screen; each child may in turn be
            open or closed, selectively revealing or hiding further parts of the hierarchy.
            When an item is closed, all of its descendants in the hierarchy are hidden. Clicking
            the text of any visible item activates the item, causing the viewer application to
            jump to a destination or trigger an action associated with the item.
        </para>

        <para>
            <classname>Zend_Pdf</classname> class provides public property
            <varname>$outlines</varname> which is an array of
            <classname>Zend_Pdf_Outline</classname> objects.
            <programlisting language="php"><![CDATA[
$pdf = Zend_Pdf::load($path);

// Remove outline item
unset($pdf->outlines[0]->childOutlines[1]);

// Set Outline to be displayed in bold
$pdf->outlines[0]->childOutlines[3]->setIsBold(true);

// Add outline entry
$pdf->outlines[0]->childOutlines[5]->childOutlines[] =
    Zend_Pdf_Outline::create('Chapter 2', 'chapter_2');

$pdf->save($path, true);
]]></programlisting>
        </para>

        <para>
            Outline attributes may be retrieved or set using the following methods:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>string getTitle()</methodname> - get outline item title.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setTitle(string $title)</methodname> - set outline item title.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>boolean isOpen()</methodname> - true if outline is open
                    by default.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setIsOpen(boolean $isOpen)</methodname> - set isOpen state.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>boolean isItalic()</methodname> - true if outline item
                    is displayed in italic.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setIsItalic(boolean $isItalic)</methodname> - set
                    isItalic state.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>boolean isBold()</methodname> - true if outline item
                    is displayed in bold.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setIsBold(boolean $isBold)</methodname> - set
                    isBold state.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Color_Rgb getColor()</methodname> - get outline
                    text color (null means black).
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setColor(Zend_Pdf_Color_Rgb $color)</methodname> - set
                    outline text color (null means black).
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Target getTarget()</methodname> - get outline
                    target (action or explicit or named destination object).
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setTarget(Zend_Pdf_Target|string $target)</methodname> - set
                    outline target (action or destination). String may be used to identify
                    named destination. Null means 'no target'.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>array getOptions()</methodname> - get outline attributes
                    as an array.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setOptions(array $options)</methodname> - set outline options.
                    The following options are recognized: 'title', 'open', 'color', 'italic',
                    'bold', and 'target'.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            New outline may be created in two ways:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>Zend_Pdf_Outline::create(string $title[, Zend_Pdf_Target|string $target])</methodname>
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Outline::create(array $options)</methodname>
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Each outline object may have child outline items listed in
            <varname>Zend_Pdf_Outline::$childOutlines</varname> public property.
            It's an array of <classname>Zend_Pdf_Outline</classname> objects,
            so outlines are organized in a tree.
        </para>

        <para>
            <classname>Zend_Pdf_Outline</classname> class implements RecursiveArray interface,
            so child outlines may be recursively iterated using RecursiveIteratorIterator:
            <programlisting language="php"><![CDATA[
$pdf = Zend_Pdf::load($path);

foreach ($pdf->outlines as $documentRootOutlineEntry) {
    $iterator = new RecursiveIteratorIterator($documentRootOutlineEntry,
                                              RecursiveIteratorIterator::SELF_FIRST);
    foreach ($iterator as $childOutlineItem) {
        $OutlineItemTarget = $childOutlineItem->getTarget();
        if ($OutlineItemTarget instanceof Zend_Pdf_Destination) {
            if ($pdf->resolveDestination($OutlineItemTarget) === null) {
                // Mark Outline item with unresolvable destination using RED color
                $childOutlineItem->setColor(new Zend_Pdf_Color_Rgb(1, 0, 0));
            }
        } else if ($OutlineItemTarget instanceof Zend_Pdf_Action_GoTo) {
            if ($pdf->resolveDestination($OutlineItemTarget->setDestination()) === null) {
                // Mark Outline item with unresolvable destination using RED color
                $childOutlineItem->setColor(new Zend_Pdf_Color_Rgb(1, 0, 0));
            }
        }
    }
}

$pdf->save($path, true);
]]></programlisting>
        </para>

        <note>
            <para>
                All outline items with unresolved destinations (or destinations of GoTo
                actions) are updated while document saving by setting their targets to null.
                So document will not be corrupted by removing pages referenced by outlines.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.pdf.pages.interactive-features.annotations">
        <title>Annotations</title>

        <para>
            An annotation associates an object such as a note, sound, or movie with a location
            on a page of a PDF document, or provides a way to interact with the user by means
            of the mouse and keyboard.
        </para>

        <para>
            All annotations are represented by <classname>Zend_Pdf_Annotation</classname>
            abstract class.
        </para>

        <para>
            Annotation may be attached to a page using
            <methodname>Zend_Pdf_Page::attachAnnotation(Zend_Pdf_Annotation $annotation)</methodname>
            method.
        </para>

        <para>
            Three types of annotations may be created by user now:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>Zend_Pdf_Annotation_Link::create($x1, $y1, $x2, $y2, $target)</methodname>
                    where <varname>$target</varname> is an action object or a destination or
                    string (which may be used in place of named destination object).
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Annotation_Text::create($x1, $y1, $x2, $y2, $text)</methodname>
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Annotation_FileAttachment::create($x1, $y1, $x2, $y2, $fileSpecification)</methodname>
                </para>
            </listitem>
        </itemizedlist>

        <para>
            A link annotation represents either a hypertext link to a destination elsewhere in
            the document or an action to be performed.
        </para>

        <para>
            A text annotation represents a "sticky note" attached to a point in the PDF document.
        </para>

        <para>
            A file attachment annotation contains a reference to a file.
        </para>

        <para>
            The following methods are shared between all annotation types:
        </para>

        <itemizedlist>
            <listitem>
                <para><methodname>setLeft(float $left)</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>float getLeft()</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>setRight(float $right)</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>float getRight()</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>setTop(float $top)</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>float getTop()</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>setBottom(float $bottom)</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>float getBottom()</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>setText(string $text)</methodname></para>
            </listitem>

            <listitem>
                <para><methodname>string getText()</methodname></para>
            </listitem>
        </itemizedlist>

        <para>
            Text annotation property is a text to be displayed for the annotation or, if this
            type of annotation does not display text, an alternate description of the annotation’s
            contents in human-readable form.
        </para>

        <para>
            Link annotation objects also provide two additional methods:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>setDestination(Zend_Pdf_Target|string $target)</methodname>
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>Zend_Pdf_Target getDestination()</methodname>
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->