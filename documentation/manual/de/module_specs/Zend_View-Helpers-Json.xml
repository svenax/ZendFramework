<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 15617 -->
<!-- Reviewed: no -->
<sect3 id="zend.view.helpers.initial.json">
    <title>JSON Helfer</title>

    <para>
        Wenn Views erstellt werden die JSON zurückgeben ist es wichtig auch den entsprechenden
        Antwort-Header zu setzen. Der JSON View Helfer macht exakt das. Zusätzlich schaltet er,
        standardmäßig, Layouts aus (wenn diese aktuell eingeschaltet sind), weil Layouts generell
        nicht mit JSON Antworten verwendet werden.
    </para>

    <para>
        Der JSON Helfer setzt die folgenden Header:
    </para>

    <programlisting language="text"><![CDATA[
Content-Type: application/json
]]></programlisting>

    <para>
        Die meisten AJAX Bibliotheken sehen nach diesem Header wenn die Antworten geparst werden um
        festzustellen wie der Inhalt handzuhaben ist.
    </para>

    <para>
        Die Verwendung des JSON Helfers ist sehr geradlienig:
    </para>

    <programlisting language="php"><![CDATA[
<?php echo $this->json($this->data) ?>
]]></programlisting>

    <note>
        <title>Layouts behalten und Encoding einschalten durch Verwendung von Zend_Json_Expr</title>

        <para>
            Jede Methode im JSON Helfer akzwptiert ein zweites, optionales, Argument. Dieses
            zweite Argument kan ein boolsches Flag sein um Layouts ein- oder auszuschalten, oder
            ein Array von Optionen die an <code>Zend_Json::encode()</code> übergeben und intern
            verwendet werden um Daten zu kodieren.
        </para>

        <para>
            Um Layouts zu behalten muß der zweite Parameter ein boolsches <code>true</code> sein.
            Wenn der zweite Parameter ein Array ist, können Layouts behalten werden indem ein
            <code>keepLayouts</code> Schlüssel mit dem boolschen Wert <code>true</code>
            eingefügt wird.
        </para>

        <programlisting language="php"><![CDATA[
// Ein boolsches true als zweites Argument aktiviert Layouts:
echo $this->json($this->data, true);

// Oder ein boolsches true als "keepLayouts" Schlüssel:
echo $this->json($this->data, array('keepLayouts' => true));
]]></programlisting>

        <para>
            <classname>Zend_Json::encode</classname> erlaubt es native JSON Ausdrücke zu kodieren
            indem <classname>Zend_Json_Expr</classname> Objekte verwendet werden. Diese Option
            ist standardmäßig deaktiviert. Um diese Option zu aktivieren, muß ein boolsches
            <code>true</code> an den <code>enableJsonExprFinder</code> Schlüssel des Options
            Arrays übergeben werden:
        </para>

        <programlisting language="php"><![CDATA[
<?php echo $this->json($this->data, array(
    'enableJsonExprFinder' => true,
    'keepLayouts'          => true,
)) ?>
]]></programlisting>
    </note>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
