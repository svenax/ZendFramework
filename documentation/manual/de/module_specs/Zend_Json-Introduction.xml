<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 17175 -->
<!-- Reviewed: no -->
<sect1 id="zend.json.introduction">
    <title>Einführung</title>

    <para>
        <classname>Zend_Json</classname> stellt komfortable Methoden für das Serialisieren von
        nativem <acronym>PHP</acronym> nach JSON und das Dekodieren von JSON in natives
        <acronym>PHP</acronym> bereit. Für weitere Informationen zu JSON <ulink
            url="http://www.json.org/">besuche die Website des JSON Projekts</ulink>.
    </para>

    <para>
        JSON, JavaScript Object Notation, kann für den Datenaustausch zwischen Javascript und
        anderen Sprachen verwendet werden. Da JSON direkt in Javascript ausgewertet werden kann,
        ist es ein effizienteres und leichtgewichtigeres Format für den Datenaustausch mit
        Javascript Clients als <acronym>XML</acronym>.
    </para>

    <para>
        Zusätzlich bietet <classname>Zend_Json</classname> einen nützlichen Weg um jeglichen
        willkürlichen <acronym>XML</acronym> formatierten String in einem JSON formatierten String
        zu konvertieren. Dieses eingebaute Feature ermöglicht es <acronym>PHP</acronym> Entwicklern,
        Enterprise Daten die im <acronym>XML</acronym> Format kodiert sind, in das JSON Format zu
        transformieren bevor es an Browser-basierende Ajax Client Anwendungen gesendet wird. Das
        bietet einen einfachen Weg um dynamisch Daten mit Server seitigem Code zu konvertieren was
        unnötiges <acronym>XML</acronym> Parsen auf der Browser-seitigen Anwendung verhindert. Das
        offeriert eine nette nützliche Funktion was wiederum in einfacheren Anwendungs-spezifischer
        Datenverarbeitungs Techniken resultiert.
    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->