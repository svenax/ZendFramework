<!-- EN-Revision: 12817 -->
<sect1 id="zend.auth.adapter.openid">

    <title>Open ID Authentifikation</title>

    <sect2 id="zend.auth.adapter.openid.introduction">

        <title>Einführung</title>
        <para>
            Der <code>Zend_Auth_Adapter_OpenId</code> Adapter kann verwendet werden um Benutzer durch
            Verwendung eines entfernten OpenID Servers zu authentifizieren. Diese Authentifizierungsmethode
            nimmt an das Benutzer nur ihre OpenID Identität an die Web Anwendung übermitteln. Dann werden
            Sie zu Ihrem OpenID Anbieter umgeleitet um die Eigentümerschaft der Identität mit Hilfe eines
            Passwortes oder einer anderen Methode zu prüfen. Dieses Passwort wird der Web Anwendung nie bekannt
            gegeben.
        </para>
        <para>
            Die OpenID Identität ist nur eine URL die auf eine Webseite mit entsprechenden Informationen
            über den Benutzer und spezielle Tags verweist welche beschreiben welcher Server verwendet werden soll
            und welche Identität dort zu übermitteln ist. Mehr über OpenID kann auf der
            <ulink url="http://www.openid.net/">offiziellen OpenID Site</ulink> nachgelesen werden.
        </para>
        <para>
            Die <code>Zend_Auth_Adapter_OpenId</code> Klasse umgibt die <code>Zend_OpenId_Consumer</code>
            Komponente welche das OpenID Authentifizierungs Protokoll selbst implementiert.
        </para>

        <note>
            <para>
                <code>Zend_OpenId</code> hat Vorteile davon wenn die
                <ulink url="http://php.net/gmp">GMP Erweiterung</ulink> vorhanden ist. Es sollte
                Angedacht werden die GMP Erweiterung für eine bessere Performance einzuschalten  wenn
                <code>Zend_Auth_Adapter_OpenId</code> verwendet wird.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.auth.adapter.openid.specifics">
        <title>Spezielles</title>
        <para>
            Wie in diesem Fall für alle <code>Zend_Auth</code> Adapter, implementiert die
            <code>Zend_Auth_Adapter_OpenId</code> Klasse das <code>Zend_Auth_Adapter_Interface</code>, welches
            nur eine Methode definiert: <code>authenticate()</code>. Diese Methode führt die Authentifizierung
            selbst durch, allerdings muß das Objekt vor dem Aufruf vorbereitet werden. So eine Vorbereitung des
            Adapters beinhaltet das Setzen der OpenID Identität und einige andere <code>Zend_OpenId</code>
            spezifische Optionen.
        </para>

        <para>
            Trotzdem, im Gegensatz zu anderen <code>Zend_Auth</code> Adaptern führt
            <code>Zend_Auth_Adapter_OpenId</code> Authentifizierungen an einem
            externen Server durch und das wird in zwei separaten HTTP Anfragen getan. Deswegen muß
            <code>Zend_Auth_Adapter_OpenId::authenticate()</code> zweimal aufgerufen werden. Beim ersten Aufruf
            wird die Methode nichts zurückgeben, aber den Benutzer zu seinem OpenID Server umleiten. Dann,
            nachdem der Benutzer auf dem entfernten Server authentifiziert ist wird dieser wieder zurück
            umleiten und das Skript muß für diese zweite Anfrage
            <code>Zend_Auth_Adapter_OpenId::authenticate()</code> nochmals aufrufen um die Signatur zu prüfen,
            welche mit der umgeleiteten Anfrage vom Server geschickt wird, und den Authentifikationsprozess
            zu beenden. Bei diesem zweiten Aufruf wird wie erwartet ein <code>Zend_Auth_Result</code>
            Objekt zurückgegeben.
        </para>

        <para>
            Das folgende Beispiel zeigt die Verwendung von <code>Zend_Auth_Adapter_OpenId</code>. Wie vorher
            erwähnt wird die <code>Zend_Auth_Adapter_OpenId::authenticate()</code> Methode zweimal aufgerufen.
            Das erste Mal, ist nachdem der Benutzer das HTML Formular übermittelt hat und
            <code>$_POST['openid_action']</code> auf <code>"login"</code> gesetzt wurde, und das zweite Mal
            nach der HTTP Umleitung vom OpenID Server wenn <code>$_GET['openid_mode']</code> oder
            <code>$_POST['openid_mode']</code> gesetzt wurde.
        </para>

        <programlisting role="php"><![CDATA[
$status = "";
$auth = Zend_Auth::getInstance();
if ((isset($_POST['openid_action']) &&
     $_POST['openid_action'] == "login" &&
     !empty($_POST['openid_identifier'])) ||
    isset($_GET['openid_mode']) ||
    isset($_POST['openid_mode'])) {
    $result = $auth->authenticate(
        new Zend_Auth_Adapter_OpenId(@$_POST['openid_identifier']));
    if ($result->isValid()) {
        $status = "Sie sind angemeldet als "
                . $auth->getIdentity()
                . "<br>\n";
    } else {
        $auth->clearIdentity();
        foreach ($result->getMessages() as $message) {
            $status .= "$message<br>\n";
        }
    }
} else if ($auth->hasIdentity()) {
    if (isset($_POST['openid_action']) &&
        $_POST['openid_action'] == "logout") {
        $auth->clearIdentity();
    } else {
        $status = "Sie sind angemeldet als "
                . $auth->getIdentity()
                . "<br>\n";
    }
}
?>
<html><body>
<?php echo htmlspecialchars($status);?>
<form method="post"><fieldset>
<legend>OpenID Login</legend>
<input type="text" name="openid_identifier" value="">
<input type="submit" name="openid_action" value="login">
<input type="submit" name="openid_action" value="logout">
</fieldset></form></body></html>
*/
]]>
        </programlisting>

        <para>
            Man kann den OpenID Authentifizierungs Prozess auf verschiedenen Wegen anzupassen. Man kann,zum
            Bespiel, die Umleitung des OpenID Servers auf eine eigene Seite erhalten, indem der "root"
            der Webseite spezifiziert wird und ein eigener <code>Zend_OpenId_Consumer_Storage</code> oder
            <code>Zend_Controller_Response</code> verwendet wird. Man kann auch eine einfache
            Registrierungserweiterung verwenden um Informationen über den Benutzer vom OpenID Server zu
            erhalten. Alle diese Möglichkeiten werden detailierter im Kapitel <code>Zend_OpenId_Consumer</code>
            beschrieben.
        </para>

    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->