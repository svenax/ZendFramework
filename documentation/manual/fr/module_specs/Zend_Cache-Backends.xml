<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 17749 -->
<!-- Reviewed: no -->
<sect1 id="zend.cache.backends">
    <title>Les backends Zend_Cache</title>

    <para>
        Il existe deux types de backends&#160;: les standards et les étendus. Bien sûr, les
        backends étendus offrent des fonctionnalités supplémentaires.
    </para>

    <sect2 id="zend.cache.backends.file">
        <title>Zend_Cache_Backend_File</title>

        <para>
            Ces backends (étendus) stockent les enregistrements de cache dans des fichiers
            (dans un dossier choisi).
        </para>

        <para>Les options disponibles sont&#160;:</para>

        <table id="zend.cache.backends.file.table">
            <title>Options du backend File</title>

            <tgroup cols="4">
                <thead>
                    <row>
                        <entry>Option</entry>
                        <entry>Type de données</entry>
                        <entry>Valeur par défaut</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>cache_dir</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry><filename>/tmp/</filename></entry>
                        <entry>Répertoire où stocker les fichiers de cache</entry>
                    </row>
                    <row>
                        <entry><emphasis>file_locking</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>TRUE</constant></entry>
                        <entry>
                            Active / désactive le verrou de fichier&#160;: peut éviter la
                            corruption du cache dans de mauvaises circonstances, mais il n'aide en
                            rien sur des serveur multithreadés ou sur des systèmes de fichier
                            <acronym>NFS</acronym>...
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>read_control</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>TRUE</constant></entry>
                        <entry>
                            Active / désactive le contrôle de lecture&#160;: si activé, une clé
                            de contrôle est embarquée dans le fichier de cache et cette clé est
                            comparée avec celle calculée après la lecture.
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>read_control_type</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry>'crc32'</entry>
                        <entry>
                            Type de contrôle de lecture (seulement si le contrôle de lecture
                            est activé). Les valeurs disponibles sont&#160;: "md5" (meilleur mais
                            plus lent), "crc32" (un peu moins sécurisé, mais plus rapide, c'est un
                            meilleur choix), "adler32" (nouveau choix, plus rapide que
                            crc32),"strlen" pour un test de longueur uniquement (le plus
                            rapide).
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>hashed_directory_level</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>0</entry>
                        <entry>
                            Niveau de structure du hash du répertoire&#160;: 0 signifie "pas de
                            hashage de la structure du répertoire", 1 signifie "un niveau de
                            répertoire", 2 signifie "deux niveaux"... Cette option peut accélérer
                            le cache seulement lorsque vous avez plusieurs centaines de fichiers de
                            cache. Seuls des tests de performance spécifiques peuvent vous aider à
                            choisir la meilleure valeur pour vous. 1 ou 2, peut-être un bon
                            départ.
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>hashed_directory_umask</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>0700</entry>
                        <entry>Umask pour l'arborescence</entry>
                    </row>
                    <row>
                        <entry><emphasis>file_name_prefix</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry>'zend_cache'</entry>
                        <entry>
                            Préfixe pour les fichiers mis en cache&#160;; faîtes très attention
                            avec cette option, en cas de valeur trop générique dans le dossier de
                            cache (comme <filename>/tmp</filename>), ceci peut causer des désastres
                            lors du nettoyage du cache.
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>cache_file_umask</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>0700</entry>
                        <entry>umask des fichiers de cache.</entry>
                    </row>
                    <row>
                        <entry><emphasis>metatadatas_array_max_size</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>100</entry>
                        <entry>
                            Taille maximale interne pour les tableaux de métadonnées (ne
                            changez pas cette valeur à moins de bien savoir ce que vous
                            faîtes).
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.cache.backends.sqlite">
        <title>Zend_Cache_Backend_Sqlite</title>

        <para>
            Ce backend (étendu) stocke les enregistrements de cache dans une base de donnée
            SQLite.
        </para>

        <para>Les options disponibles sont&#160;:</para>

        <table id="zend.cache.backends.sqlite.table">
            <title>Options du backend Sqlite</title>

            <tgroup cols="4">
                <thead>
                    <row>
                        <entry>Option</entry>
                        <entry>Type de données</entry>
                        <entry>Valeur par défaut</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>cache_db_complete_path (obligatoire)</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry><constant>NULL</constant></entry>
                        <entry>
                            Le chemin complet (nom du fichier inclus) de la base de donnée
                            SQLite
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>automatic_vacuum_factor</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>10</entry>
                        <entry>
                            Désactive / Active le processus de vidange automatique. Celui-ci
                            défragmente le fichier de base de données (et diminue sa taille) quand
                            <methodname>clean()</methodname> ou <methodname>delete()</methodname>
                            est appelé&#160;: 0 pour une vidange automatique&#160;; 1
                            pour une vidange systématique (quand <methodname>clean()</methodname>
                            ou <methodname>delete()</methodname> est
                            appelé)&#160;; x (entier) &gt; 1 pour une vidange automatique
                            aléatoirement 1 fois sur x <methodname>clean()</methodname> ou
                            <methodname>delete()</methodname>.
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.cache.backends.memcached">
        <title>Zend_Cache_Backend_Memcached</title>

        <para>
            Ce backend (étendu) stocke les enregistrements de cache dans un serveur memcached.
            <ulink url="http://www.danga.com/memcached/">Memcached</ulink> est un système de cache
            en mémoire distribuée, de haute performance. Pour utiliser ce backend, vous devez avoir
            un démon memcached et l'extension
            <ulink url="http://pecl.php.net/package/memcache"><acronym>PECL</acronym>
            memcache</ulink>.
        </para>

        <para>
            Attention : avec ce backend, les balises ("tags") ne sont pas supportées pour le
            moment comme l'argument "doNotTestCacheValidity=true".
        </para>

        <para>Les options disponibles sont&#160;:</para>

        <table id="zend.cache.backends.memcached.table">
            <title>Options du backend Memcached</title>

            <tgroup cols="4">
                <thead>
                    <row>
                        <entry>Option</entry>
                        <entry>Type de données</entry>
                        <entry>Valeur par défaut</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>servers</emphasis></entry>
                        <entry><type>Array</type></entry>
                        <entry>
                            <command>array(array('host' => 'localhost', 'port' => 11211,
                                'persistent' => true, 'weight' => 1, 'timeout' => 5,
                                'retry_interval' => 15, 'status' => true,
                                'failure_callback' => '' ))</command>
                        </entry>
                        <entry>
                            Un tableau de serveurs memcached&#160;; chaque serveur memcached est
                            décrit par un tableau associatif&#160;: 'host' =&gt; (string)&#160;: le
                            nom du serveur memcached, 'port' =&gt; (int)&#160;: le port du serveur
                            memcached, 'persistent' =&gt; (bool)&#160;: utilisation ou pas des
                            connexions persistantes pour ce serveur memcached, 'weight' =&gt;
                            (int)&#160;: le poids du serveur memcached, 'timeout' =&gt;
                            (int)&#160;: le time out du serveur memcached, 'retry_interval' =&gt;
                            (int)&#160;: l'intervalle avant réexécution du serveur memcached,
                            'status' =&gt; (bool)&#160;: le statut du serveur memcached,
                            'failure_callback' =&gt; (callback)&#160;: le failure_callback d'échec
                            du serveur memcached.
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>compression</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            <constant>TRUE</constant>, si vous voulez utiliser la compression à la
                            volée
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>compatibility</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            <constant>TRUE</constant>, si vous voulez utiliser le mode de
                            compatibilité avec les anciens serveurs&#160;/&#160;extensions memcache
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.cache.backends.apc">
        <title>Zend_Cache_Backend_Apc</title>

        <para>
            Ce backend (étendu) stocke les enregistrements de cache en mémoire partagée grâce
            à l'extension <ulink url="http://pecl.php.net/package/APC">APC</ulink>
            (Alternative <acronym>PHP</acronym> Cache) qui est requise pour utiliser ce backend.
        </para>

        <para>
            Attention: avec ce backend, les balises ("tags") ne sont pas supportées pour le
            moment comme l'argument "doNotTestCacheValidity=true".
        </para>

        <para>Il n'y a pas d'options pour ce backend.</para>
    </sect2>

    <sect2 id="zend.cache.backends.xcache">
        <title>Zend_Cache_Backend_Xcache</title>

        <para>
            Ce backend stocke ces enregistrements de cache dans la mémoire partagée à travers
            l'extension <ulink url="http://xcache.lighttpd.net/">XCache</ulink>(qui est bien sûr
            nécessaire pour utiliser ce backend).
        </para>

        <para>
            Attention : avec ce backend, les balises ("tags") ne sont pas supportées pour le
            moment comme l'argument "doNotTestCacheValidity=true".
        </para>

        <para>Les options disponibles sont&#160;:</para>

        <table id="zend.cache.backends.xcache.table">
            <title>Options du backend Xcache</title>

            <tgroup cols="4">
                <thead>
                    <row>
                        <entry>Option</entry>
                        <entry>Type de données</entry>
                        <entry>Valeur par défaut</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>user</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry><constant>NULL</constant></entry>
                        <entry>
                            <filename>xcache.admin.user</filename>, nécessaire pour la
                            méthode <methodname>clean()</methodname>.
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>password</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry><constant>NULL</constant></entry>
                        <entry>
                            <filename>xcache.admin.pass</filename> (en texte clair non
                            <acronym>MD5</acronym>), nécessaire pour la méthode
                            <methodname>clean()</methodname>.
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.cache.backends.platform">
        <title>Zend_Cache_Backend_ZendPlatform</title>

        <para>
            Ce backend utilise l'<acronym>API</acronym> de cache de contenu de la
            <ulink url="http://www.zend.com/fr/products/platform">Zend Platform</ulink>.
            Naturellement, pour utiliser ce backend, vous devez avoir installé une Zend Platorm.
        </para>

        <para>
            Ce backend supporte les balises ("tags") mais ne supporte pas le mode de
            nettoyage <constant>CLEANING_MODE_NOT_MATCHING_TAG</constant>.
        </para>

        <para>
            Spécifiez ce backend en utilisant un séparateur de mot - "-", ".", " " ou "_" -
            entre les mots "Zend" et "Platform" quand vous utilisez la méthode
            <methodname>Zend_Cache::factory()</methodname>&#160;:
        </para>

        <programlisting language="php"><![CDATA[
$cache = Zend_Cache::factory('Core', 'Zend Platform');
]]></programlisting>

        <para>Il n'y a pas d'options pour ce backend.</para>
    </sect2>

    <sect2 id="zend.cache.backends.twolevels">
        <title>Zend_Cache_Backend_TwoLevels</title>

        <para>
            Ce backend (étendu) est un hybride. Il stocke les enregistrements de cache dans
            deux autres backends&#160;: un rapide (mais limité) comme Apc, Memcache... et un plus
            "lent" comme File, Sqlite...
        </para>

        <para>
            Ce backend utilise le paramètre priorité (fourni au niveau du frontend au moment
            d'un enregistrement) et l'espace restant dans le backend rapide pour optimiser
            l'utilisation de ces deux backends.
        </para>

         <para>
            Spécifiez ce backend avec un séparateur de mots - "-", ".", " ", ou "_" - entre les
            mots "Two" et "Levels" quand vous utilisez la méthode
            <methodname>Zend_Cache::factory()</methodname>&#160;:
        </para>

        <programlisting language="php"><![CDATA[
$cache = Zend_Cache::factory('Core', 'Two Levels');
]]></programlisting>

        <para>Les options disponibles sont :</para>

        <table id="zend.cache.backends.twolevels.table">
            <title>Options du backend TwoLevels</title>

            <tgroup cols="4">
                <thead>
                    <row>
                        <entry>Option</entry>
                        <entry>Type de données</entry>
                        <entry>Valeur par défaut</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>slow_backend</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry>File</entry>
                        <entry>le nom du backend "lent"</entry>
                    </row>
                    <row>
                        <entry><emphasis>fast_backend</emphasis></entry>
                        <entry><type>String</type></entry>
                        <entry>Apc</entry>
                        <entry>le nom du backend "rapide"</entry>
                    </row>
                    <row>
                        <entry><emphasis>slow_backend_options</emphasis></entry>
                        <entry><type>Array</type></entry>
                        <entry><methodname>array()</methodname></entry>
                        <entry>les options du backend "lent"</entry>
                    </row>
                    <row>
                        <entry><emphasis>fast_backend_options</emphasis></entry>
                        <entry><type>Array</type></entry>
                        <entry><methodname>array()</methodname></entry>
                        <entry>les options du backend "rapide"</entry>
                    </row>
                    <row>
                        <entry><emphasis>slow_backend_custom_naming</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            si <constant>TRUE</constant>, l'argument "slow_backend" est
                            utilisé en tant que nom complet de classe&#160;; si
                            <constant>FALSE</constant>, l'argument frontend est utilisé concaténé à
                            "<classname>Zend_Cache_Backend_&lt;...&gt;</classname>"
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>fast_backend_custom_naming</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            si <constant>TRUE</constant>, l'argument "fast_backend" est
                            utilisé en tant que nom complet de classe&#160;; si
                            <constant>FALSE</constant>, l'argument frontend est utilisé concaténé à
                            "<classname>Zend_Cache_Backend_&lt;...&gt;</classname>"
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>slow_backend_autoload</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            si <constant>TRUE</constant>, il n'y aura pas de require_once pour le
                            "slow_backend" (utile seulement pour les backends
                            personnalisés)
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>fast_backend_autoload</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>FALSE</constant></entry>
                        <entry>
                            si <constant>TRUE</constant>, il n'y aura pas de require_once pour le
                            "fast_backend" (utile seulement pour les backends
                            personnalisés)
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>auto_refresh_fast_cache</emphasis></entry>
                        <entry><type>Boolean</type></entry>
                        <entry><constant>TRUE</constant></entry>
                        <entry>
                            si <constant>TRUE</constant>, rafraîchissement automatique du cache
                            rapide quand un enregistrement est appelé
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>stats_update_factor</emphasis></entry>
                        <entry><type>Integer</type></entry>
                        <entry>10</entry>
                        <entry>
                            désactive&#160;/&#160;personnalise le calcul du pourcentage de
                            remplissage du backend rapide (lors d'une sauvegarde d'un enregistrement
                            dans le cache, le calcul du remplissage est effectué aléatoirement
                            1 fois sur x écritures de cache)
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect2>

    <sect2 id="zend.cache.backends.zendserver">
        <title> Zend_Cache_Backend_ZendServer_Disk et Zend_Cache_Backend_ZendServer_ShMem </title>

        <para>
            Ces backends utilisent les fonctionnalités de mise en cache de
            <ulink url="http://www.zend.com/en/products/server/downloads-all?zfs=zf_download">Zend
            Server</ulink>pour stocker les données.
        </para>

        <para>
            Attention : avec ces backends ne supportent pas les balises ("tags") pour le
            moment de même que l'argument "doNotTestCacheValidity=true".
        </para>

        <para>
            Ces backends fonctionnent seulement dans l'environnement de Zend Server pour les
            pages requêtées à travers <acronym>HTTP</acronym> ou <acronym>HTTPS</acronym> et ne
            fonctionnent pas pour les scripts exécutés en ligne de commande.
        </para>

        <para>
            Spécifiez ce backend en utilisant le paramètre <emphasis>customBackendNaming</emphasis>
            à <constant>TRUE</constant> quand vous utilisez la méthode
            <methodname>Zend_Cache::factory()</methodname>&#160;:
        </para>

        <programlisting language="php"><![CDATA[
$cache = Zend_Cache::factory('Core', 'Zend_Cache_Backend_ZendServer_Disk',
                             $frontendOptions, $backendOptions, false, true);
]]></programlisting>

        <para>Il n'y a pas d'options pour ce backend.</para>
    </sect2>
</sect1>
