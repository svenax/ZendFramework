<sect1 id="zend.gdata.youtube">
    <title>Utiliser l'API YouTube</title>
    
    <para>
        L'API YouTube permet un accès en lecture au contenu Youtube sous forme de flux Google "Gdata".
        Ceci peut être des listes selon critères, des vidéos populaires, ou encore un accès aux
        informations publiques des membres de Youtube, comme les playlists ou les contacts.
    </para>
    
    <para>
        Pour plus d'informations sur l'API de Youtube,
        <ulink url="http://code.google.com/apis/youtube/">consultez sa documentation</ulink>.
    </para>
    
    <note>
        <title>Authentification</title>
        <para>
            L'API est ouverte en lecture et ne nécessite pas d'authentification.
            </para>
    </note>
    
    <sect2 id="zend.gdata.youtube.videos">
        <title>Retrieving video feeds</title>
        
        <para>
            L'API YouTube retourne de nombreux flux représentants des listes de vidéo, des réponses vidéos,
            des vidéos favorites, ou encore les vidéos d'un utilisateur. Voyez le
            <ulink url="http://code.google.com/apis/youtube/reference.html#Feeds">guide de référence
            </ulink> pour plus de détail sur les listes de tous les flux. Tous ces flux sont des flux de
            vidéos, ils retournent tous des informations sur des vidéos.
        </para>
        
        <sect3 id="zend.gdata.youtube.videos.searching">
            <title>Chercher des vidéos par metadonnées</title>
            
            <para>
                Il est possible de récupérer un flux de vidéos en effectuant une recherche par critères sur les
                métadonnées des vidéos.
                L'exemple suivant montre comment récupérer les informations des vidéos dont les métadonnées
                contiennent le mot "cat", en commençant à la 10ème vidéo, et en en listant 20 par page.
                La liste est ordonnée selon le nombres de visibilités des vidéos :
            </para>
            
            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Loader.php';
Zend_Loader::loadClass('Zend_Gdata_YouTube');

$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->videoQuery = 'cat';
$query->startIndex = 10;
$query->maxResults = 20;
$query->orderBy = 'viewCount';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query); 

foreach ($videoFeed as $videoEntry) {
  echo "---------VIDEO----------\n";
  echo "Title: " . $videoEntry->mediaGroup->title->text . "\n";
  echo "\nDescription:\n";
  echo $videoEntry->mediaGroup->description->text;
  echo "\n\n\n";
}
?>]]></programlisting>
    
            <para>
                Pour plus de détails sur les différents paramètres de requête, voyez le
                <ulink url="http://code.google.com/apis/youtube/reference.html#Parameters">
                Guide de référence</ulink>.  Il existe des fonctions d'aide dans
                Zend_Gdata_YouTube_VideoQuery pour chacun de ces paramètres.
            </para> 
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.searchingcategories">
            <title>Chercher des vidéos par catégories et mots-clés</title>
    
            <para>
                Rechercher des vidéos dans une catégorie peut être fait en passant générant
                <ulink url="http://code.google.com/apis/youtube/reference.html#CategorySearch">
                une URL spécialement formatée</ulink>.  Par exemple, pour chercher les vidéos de comédies,
                contenant le mot clé "dog" :
            </para>
    
            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->category = 'Comedy/dog';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query); 
]]></programlisting>
        </sect3>
 
        <sect3 id="zend.gdata.youtube.videos.standard">
            <title>Récupérer les flux standards</title>
            
            <para>
                L'API YouTube comporte de nombreux
                <ulink url="http://code.google.com/apis/youtube/reference.html#VideoFeeds">
                flux standards</ulink>.  On les rapatrie comme des objets Zend_Gdata_YouTube_VideoFeed en 
                utilisant des URLs spécifiques, dont beaucoup possèdent des méthodes directes d'aide dans 
                Zend_Gdata_YouTube.
            </para>

            <para>
                La méthode permettant de selectionner les vidéos les mieux notées :
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();

$videoFeed = $yt->getTopRatedVideoFeed(); 
]]></programlisting>

            <para>
                Il existe un paramètre de requête pour spécifier une période temporelle. Il n'est valide
                que pour les vidéos les mieux notées (top_rated) et les plus vues (most_viewed).
            </para>

            <para>
                Par exemple, les vidéos les mieux notées d'aujourd'hui se requêtent comme ceci :
            </para> 

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->setTime('today');
$videoFeed = $yt->getTopRatedVideoFeed($query); 
]]></programlisting> 
            <para>
                Il aurait aussi été possible de récupérer ce flux en utilisant l'URL :
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery('http://gdata.youtube.com/feeds/standardfeeds/top_rated');
$query->setTime('today');
$videoFeed = $yt->getVideoFeed($query); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.user">
            <title>Récupérer les vidéos envoyées par un utilisateur spécifique</title>

            <para>
                Vous pouvez récupérer les vidéos envoyées par un utilisateur spécifique.
                Par exemple, les vidéos de l'utilisateur 'liz' se rapatrient comme ceci :
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserUploads('liz'); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.favorites">
            <title>Récupérer les vidéos favorites d'un utilisateur spécifique</title>

            <para>
                Il est aussi possible de récupérer les vidéos favorites d'un utilisateur spécifique.
                Par exemple, les vidéos favorites de l'utilisateur 'liz' se rapatrient comme ceci :
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserFavorites('liz'); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.responses">
            <title>Récupérer les vidéos réponses d'une vidéo spécifique</title>

            <para>
                Vous pouvez récupérer les vidéos réponses d'une vidéo spécifique.
                Les vidéos données en réponses à la vidéo dont l'ID est 'abc123813abc' peuvent être
                requêtées comme ceci :
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getVideoResponseFeed('abc123813abc'); 
]]></programlisting>
        </sect3>
    </sect2>

    <sect2 id="zend.gdata.youtube.comments">
        <title>Récupérer les commentaires d'une vidéo spécifique</title>

        <para>
            Récupérer les commentaires d'une vidéo spécifique est aussi possible, via une méthode simple.
            Les commentaires de la vidéo dont l'ID est 'abc123813abc' se rapatrient de cette manière :
        </para>

        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$commentFeed = $yt->getVideoCommentFeed('abc123813abc'); 

foreach ($commentFeed as $commentEntry) {
    echo $commentEntry->title->text . "\n";
    echo $commentEntry->content->text . "\n\n\n";
} 
]]></programlisting>

        <para>
            De même, si vous possédez une vidéo sous forme d'objet Zend_Gdata_YouTube_VideoEntry, vous pouvez
            demander ses commentaires avec une méthode :
        </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoEntry = $yt->getVideoEntry('abc123813abc'); 
// on ne connait pas l'ID de la vidéo, mais son URL
$commentFeed = $yt->getVideoCommentFeed(null, $videoEntry->comments->href);
]]></programlisting>
        
    </sect2>

    <sect2 id="zend.gdata.youtube.playlists">
        <title>Récupérer le flux des playlists</title>

        <para>
            L'API YouTube donne des informations sur un utilisateur : son profil, ses playlists, ses abonnements, et
            plus.
        </para>
    
        <sect3 id="zend.gdata.youtube.playlists.user">
            <title>Requêter la playlist d'un utilisateur</title>
        
            <para>
                La playlist d'un utilisateur se rapatrie grâce à une méthode.
                Voici un exemple pour la playlist de l'utilisateur 'liz':
            </para>
            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$playlistListFeed = $yt->getPlaylistListFeed('liz'); 

foreach ($playlistListFeed as $playlistEntry) {
    echo $playlistEntry->title->text . "\n";
    echo $playlistEntry->description->text . "\n";
    echo $playlistEntry->getPlaylistVideoFeedUrl() . "\n\n\n";
} 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.playlists.special">
            <title>Requêter une playlist spécifique</title>
        
            <para>
                Récupérer les vidéos d'une playlist spécifique :
            </para>
            <programlisting role="php"><![CDATA[
$playlistVideoFeed = $yt->getPlaylistVideoFeed($playlistEntry->getPlaylistVideoFeedUrl()); 
]]></programlisting>
        </sect3>
    </sect2> 

    <sect2 id="zend.gdata.youtube.subscriptions">
        <title>Récupérer les abonnements d'un utilisateur</title>
        
        <para>
            Un utilisateur possède plusieurs types d'abonnement : à un canal, à des mots-clés (tags),
            des favoris. Un objet Zend_Gdata_YouTube_SubscriptionEntry représente un abonnement particulier.
        </para>

        <para>
            Exemple pour récupérer tous les abonnements de l'utilisateur 'liz':
        </para>
        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$subscriptionFeed = $yt->getSubscriptionFeed('liz'); 

foreach ($subscriptionFeed as $subscriptionEntry) {
    echo $subscriptionEntry->title->text . "\n";
} 
]]></programlisting>
    </sect2>

    <sect2 id="zend.gdata.youtube.profile">
        <title>Récupérer le profil d'un utilisateur</title>
        
        <para>
            Cet exemple montre comment récupérer le profil de l'utilisateur 'liz':
        </para>

        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$userProfile = $yt->getUserProfile('liz'); 
echo "username: " . $userProfile->username->text . "\n";
echo "age: " . $userProfile->age->text . "\n";
echo "hometown: " . $userProfile->hometown->text . "\n"; 
]]></programlisting>
    </sect2>
 
</sect1>
