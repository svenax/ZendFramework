<!-- EN-Revision: 11959 -->
<sect1 id="zend.file.transfer.migration">
    <title>Migrer à partir des versions précédentes</title>

    <para>L'API de <code>Zend_File_Transfer</code> a changé au cours du temps. Si vous avez commencé à utiliser
    <code>Zend_File_Transfer</code> et ses sous-composants avec les versions précédentes, suivez les lignes directrices
    ci-dessous pour migrer vos scripts et ainsi utiliser la nouvelle API.</para>

    <sect2 id="zend.file.transfer.migration.fromonesixtooneseven">
        <title>Migrating from 1.6 to 1.7 or newer</title>
        <sect3 id="zend.file.transfer.migration.fromonesixtooneseven.validators">
            <title>Changes when using filters and validators</title>

            <para>
                As noted by users, the validators from <code>Zend_File_Transfer</code>
                do not work in conjunction with <code>Zend_Config</code> due to the fact
                that they have not used named arrays.
            </para>

            <para>
                Therefor, all filters and validators for <code>Zend_File_Transfer</code>
                have been reworked. While the old signatures continue to work,
                they have been marked as deprecated, and will emit a PHP notice
                asking you to fix them.
            </para>

            <para>
                The following list shows you the changes you will have to do for proper
                usage of the parameters.
            </para>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.rename">
                <title>Filter: <emphasis>Rename</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Filter_File_Rename($oldfile, $newfile, $overwrite)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Filter_File_Rename($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>source</emphasis> equals to $oldfile,
                        <emphasis>target</emphasis> equals to $newfile,
                        <emphasis>overwrite</emphasis> equals to $overwrite
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.rename.example">
                    <title>Changes for the rename filter from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addFilter('Rename',
                   array('/path/to/oldfile', '/path/to/newfile', true));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addFilter('Rename',
                   array('source' => '/path/to/oldfile',
                         'target' => '/path/to/newfile',
                         'overwrite' => true));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.count">
                <title>Validator: <emphasis>Count</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_Count($min, $max)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_Count($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>min</emphasis> equals to $min,
                        <emphasis>max</emphasis> equals to $max,
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.count.example">
                    <title>Changes for the count validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Count',
                   array(2, 3));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Count',
                   array('min' => 2,
                         'max' => 3));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.extension">
                <title>Validator: <emphasis>Extension</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_Extension($extension, $case)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_Extension($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>*</emphasis> equals to $extension and can have any other key,
                        <emphasis>case</emphasis> equals to $case,
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.extension.example">
                    <title>Changes for the extension validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Extension',
                   array('jpg,gif,bmp', true));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Extension',
                   array('extension1' => 'jpg,gif,bmp',
                         'case' => true));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.filessize">
                <title>Validator: <emphasis>FilesSize</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_FilesSize($min, $max, $bytestring)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_FilesSize($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>min</emphasis> equals to $min,
                        <emphasis>max</emphasis> equals to $max,
                        <emphasis>bytestring</emphasis> equals to $bytestring
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.filessize.example">
                    <title>Changes for the filessize validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize',
                   array(100, 10000, true));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize',
                   array('min' => 100,
                         'max' => 10000,
                         'bytestring' => true));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.hash">
                <title>Validator: <emphasis>Hash</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_Hash($hash, $algorithm)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_Hash($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>*</emphasis> equals to $hash and can have any other key,
                        <emphasis>algorithm</emphasis> equals to $algorithm,
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.hash.example">
                    <title>Changes for the hash validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Hash',
                   array('12345', 'md5'));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Hash',
                   array('hash1' => '12345',
                         'algorithm' => 'md5'));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.imagesize">
                <title>Validator: <emphasis>ImageSize</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_ImageSize($minwidth, $minheight, $maxwidth, $maxheight)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_FilesSize($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>minwidth</emphasis> equals to $minwidth,
                        <emphasis>maxwidth</emphasis> equals to $maxwidth,
                        <emphasis>minheight</emphasis> equals to $minheight,
                        <emphasis>maxheight</emphasis> equals to $maxheight,
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.imagesize.example">
                    <title>Changes for the imagesize validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('ImageSize',
                   array(10, 10, 100, 100));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('ImageSize',
                   array('minwidth' => 10,
                         'minheight' => 10,
                         'maxwidth' => 100,
                         'maxheight' => 100));
]]></programlisting>
                </example>
            </sect4>

            <sect4 id="zend.file.transfer.migration.fromonesixtooneseven.validators.size">
                <title>Validator: <emphasis>Size</emphasis></title>

                <itemizedlist>
                    <listitem><para>
                        Old method API: <code>Zend_Validate_File_Size($min, $max, $bytestring)</code>
                    </para></listitem>

                    <listitem><para>
                        New method API: <code>Zend_Validate_File_Size($options)</code> where $options accepts
                        the following array keys:
                        <emphasis>min</emphasis> equals to $min,
                        <emphasis>max</emphasis> equals to $max,
                        <emphasis>bytestring</emphasis> equals to $bytestring
                    </para></listitem>
                </itemizedlist>

                <example id="zend.file.transfer.migration.fromonesixonetooneseven.validators.size.example">
                    <title>Changes for the size validator from 1.6 to 1.7</title>

                    <programlisting role="php"><![CDATA[
// Example for 1.6
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Size',
                   array(100, 10000, true));

// Same example for 1.7
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('Size',
                   array('min' => 100,
                         'max' => 10000,
                         'bytestring' => true));
]]></programlisting>
                </example>
            </sect4>
        </sect3>
    </sect2>

    <sect2 id="zend.file.transfer.migration.fromonesixonetoonesixtwo">
        <title>Migrer de la version 1.6.1 vers 1.6.2 ou plus récent</title>

        <sect3 id="zend.file.transfer.migration.fromonesixonetoonesixtwo.validators">
            <title>Changements quand vous utilisez des validateurs</title>

            <para>Certaines remarques des utilisateurs indiquaient que les validateurs de
            <code>Zend_File_Transfer</code> ne fonctionnaient pas comme ceux par défaut fournis avec
            <code>Zend_Form</code>. <code>Zend_Form</code> permet par exemple l'utilisation du paramètre
            <code>breakChainOnFailure</code> qui stoppe la validation de tous les validateurs suivants dès qu'une erreur
            de validation apparaît.</para>

            <para>Nous avons donc ajouter ce paramètre à tous les validateurs existants pour
            <code>Zend_File_Transfer</code>.</para>

            <itemizedlist>
                <listitem>
                    <para>Ancienne API : <code>addValidator($validator, $options, $files)</code>.</para>
                </listitem>

                <listitem>
                    <para>Nouvelle API : <code>addValidator($validator, $breakChainOnFailure, $options,
                    $files)</code>.</para>
                </listitem>
            </itemizedlist>

            <para>Pour migrer vos scripts vers la nouvelle API, ajoutez simplement un a <code>false</code> après voir
            défini le validateur souhaité.</para>

            <example id="zend.file.transfer.migration.fromonesixonetoonesixtwo.example">
                <title>Comment changer les validateurs de fichiers de 1.6.1 vers 1.6.2</title>

                <programlisting role="php"><![CDATA[
// Exemple pour 1.6.1
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', array('1B', '100kB'));

// Même exemple pour 1.6.2 et plus récent
// Notez l'ajout du booléen false
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', false, array('1B', '100kB'));]]></programlisting>
            </example>
        </sect3>
    </sect2>
</sect1>