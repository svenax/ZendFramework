<!-- EN-Revision: 5617 -->
<sect1 id="zend.feed.importing">
    <title>Importer des flux</title>

    <para><code>Zend_Feed</code> permet aux développeurs d'obtenir très facilement des flux. Si vous connaissez l'URI
    d'un flux, utilisez simplement la méthode <code>Zend_Feed::import()</code> :</para>

    <programlisting role="php"><![CDATA[<?php
$flux = Zend_Feed::import('http://flux.example.com/nomDuFlux');]]></programlisting>

    <para>Vous pouvez aussi utiliser <code>Zend_Feed</code> pour aller chercher le contenu d'un flux à partir d'un
    fichier ou d'une chaîne PHP :</para>

    <programlisting role="php"><![CDATA[<?php
// on importe un flux à partir d'un fichier texte
$fluxAPartirDeFichierTexte = Zend_Feed::importFile('flux.xml');

// on importe un flux à partir d'une variable PHP de type chaîne
$fluxAPartirDePHP = Zend_Feed::importString($chaineFlux);]]></programlisting>

    <para>Dans chacun des exemples ci-dessus, une instance d'une classe étendant <code>Zend_Feed_Abstract</code> est
    renvoyée en cas de succès, selon le type du flux. Si un flux RSS a été obtenu au moyen de l'une des méthodes
    d'importation décrites ci-dessus, alors un objet <code>Zend_Feed_Rss</code> sera renvoyé. Par contre, si un flux
    Atom a été importé, alors un objet <code>Zend_Feed_Atom</code> est renvoyé. Les méthodes d'importation déclencheront
    aussi une exception <code>Zend_Feed_Exception</code> en cas d'échec, par exemple si le flux est illisible ou
    malformé.</para>

    <sect2 id="zend.feed.importing.custom">
        <title>Flux personnalisés</title>

        <para><code>Zend_Feed</code> permet aux développeurs de créer du flux personnalisé très facilement. Vous devez
        juste créer un tableau et l'importer avec Zend_Feed. Ce tableau peut être importé avec
        <code>Zend_Feed::importArray()</code> ou avec <code>Zend_Feed::importBuilder()</code>. Dans ce dernier cas, le
        tableau sera calculé instantanément par une source de données personnalisée implémentant
        <code>Zend_Feed_Builder_Interface</code>.</para>

        <sect3 id="zend.feed.importing.custom.importarray">
            <title>Importer un tableau personnalisé</title>

            <programlisting role="php"><![CDATA[<?php
// on importe un flux atom à partir d'un tableau
$atomFeedFromArray = Zend_Feed::importArray($array);

// la ligne suivante est équivalente à celle ci-dessus ; par défaut l'instance Zend_Feed_Atom est retournée
$atomFeedFromArray = Zend_Feed::importArray($array, 'atom');

// on importe un flux rss à partir d'un tableau
$rssFeedFromArray = Zend_Feed::importArray($array, 'rss');]]></programlisting>

            <para>Le format du tableau doit être conforme à cette structure :</para>

            <programlisting role="php"><![CDATA[<?php
array(
      'title'       => 'titre du flux', // obligatoire
      'link'        => 'url canonique du flux', // obligatoire
      'lastUpdate'  => 'date de la mise à jour au format timestamp', // optionel
      'published'   => 'date de la publication au format timestamp', // optionel
      'charset'     => 'charset des données textuelles', // obligatoire
      'description' => 'description courte du flux', // optionel
      'author'      => 'auteur du flux', // optionel
      'email'       => 'email de l'auteur du flux', // optionel
      'webmaster'   => 'email de la personne responsable en cas de problème technique' // optionel, ignoré si le flux est de type atom
      'copyright'   => 'informations de copyright', // optionel
      'image'       => 'url de l'image', // optionel
      'generator'   => 'générateur du flux', // optionel
      'language'    => 'langue dans la quelle le flux est écrit', // optionel
      'ttl'         => 'combien de temps en minutes un flux peut être mis en cache avant rafraichissement', // optionel, ignoré si le flux est de type atom
      'rating'      => 'l'évaluation PICS du canal', // optionel, ignoré si le flux est de type atom
      'cloud'       => array(
                             'domain'            => 'domaine du nuage, ex. rpc.sys.com' // obligatoire
                             'port'              => 'port de connexion' // optionel, par défault port 80
                             'path'              => 'chemin du nuage, ex. /RPC2' // obligatoire
                             'registerProcedure' => 'procédure à appeler, ex. myCloud.rssPleaseNotify' // obligatoire
                             'protocol'          => 'protocole à utiliser , ex. soap ou xml-rpc' // obligatoire
                             ), // un nuage pour être averti des mises à jour // optionel, ignoré si le flux est de type atom
      'textInput'   => array(
                             'title'       => 'l'intitulé du bouton de validation de la boîte de saisie' // obligatoire,
                             'description' => 'explication de la boîte de saisie' // obligatoire
                             'name'        => 'le nom de l'objet texte' // obligatoire
                             'link'        => 'l'URL du CGI qui va analyser la requête' // obligatoire
                             ) // une boîte de saisie qui peut être montrée avec le flux  // optionel, ignoré si le flux est de type atom
      'skipHours'   => array(
                             'heures dans le format 24H', // ex. 13 (1pm)
                             // jusqu'à 24 lignes dont les valeurs sont des nombres commpris entre 0 et 23
                             ) // Information disant aux aggrégateurs quelles heures ils peuvent ignorer // optionel, ignoré si le flux est de type atom
      'skipDays '   => array(
                             'jour', // ex. Monday
                             // jusqu'à 7 lignes dont les valeurs peuvent être Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday
                             ) // Information disant aux aggrégateurs quelles jours ils peuvent ignorer // optionel, ignoré si le flux est de type atom
      'itunes'      => array(
                             'author'       => 'nom de l'artiste' // optionel, par défaut l'auteur principal
                             'owner'        => array(
                                                     'name' => 'nom du propriétaire' // optionel, default l'auteur principal
                                                     'email' => 'email du propriétaire' // optionel, default l'email de l'auteur principal
                                                     ) // propriétaire du podcast // optionel
                             'image'        => 'image de l'album/podcast' // optionel, default to the main image value
                             'subtitle'     => 'description courte' // optionel, default to the main description value
                             'summary'      => 'description longue' // optionel, default to the main description value
                             'block'        => 'empêcher l'apparition d'un épisode (yes|no)' // optionel
                             'category'     => array(
                                                     array('main' => 'catégorie principale', // obligatoire
                                                           'sub'  => 'sous-catégorie' // optionel
                                                           ),
                                                     // jusqu'à 3 lignes
                                                     ) // 'Catégorie et information de recherche dans iTunes Music Store' // obligatoire
                             'explicit'     => 'graphique d'avertissement parental (yes|no|clean)' // optionel
                             'keywords'     => 'une liste d'au maximum 12 mot clés separés par des virgules' // optionel
                             'new-feed-url' => 'utiliser pour informer iTunes d'un nouvel URL de flux' // optionel
                             ) // Données d'extension iTunes // optionel, ignoré si le flux est de type atom
      'entries'     => array(
                             array(
                                   'title'        => 'titre de l'item', // obligatoire
                                   'link'         => 'url de cet item', // obligatoire
                                   'description'  => 'version raccourci du texte', // seulement du text, pas d'html, obligatoire
                                   'guid'         => 'id de l'article, si aucun alors la valeur link est utilisée', // optionel
                                   'content'      => 'version complète de l'information', // peut contenir html, optionel
                                   'lastUpdate'   => 'date de publication au format timestamp', // optionel
                                   'comments'     => 'page de commentaires de l'item', // optionel
                                   'commentRss'   => 'l'url du flux des commentaires associés', // optionel
                                   'source'       => array(
                                                           'title' => 'titre de la source originale' // obligatoire,
                                                           'url' => 'url de la source originale' // obligatoire
                                                           ) // source originale de l'item // optionel
                                   'category'     => array(
                                                           array(
                                                                 'term' => 'intitulé de la première catégorie' // obligatoire,
                                                                 'scheme' => 'url qui décrit l'organisation de la catégorie' // optionel
                                                                 ),
                                                           array(
                                                                 //données de la seconde catégorie et ainsi de suite
                                                                 )
                                                           ) // liste des catégories attachées// optionel
                                   'enclosure'    => array(
                                                           array(
                                                                 'url' => 'url de la pièce jointe' // obligatoire
                                                                 'type' => 'type mime de la pièce jointe' // optionel
                                                                 'length' => 'length de la pièce jointe en octets' // optionel
                                                                 ),
                                                           array(
                                                                 //données de la seconde pièce jointe et ainsi de suite
                                                                 )
                                                           ) // liste des pièces jointes à l'item // optionel
                                   ),
                             array(
                                   //données du second item et ainsi de suite
                                   )
                             )
       );]]></programlisting>

            <para>Références : <itemizedlist>
                    <listitem>
                        <para>Spécification RSS 2.0 : <ulink url="http://blogs.law.harvard.edu/tech/rss">RSS
                        2.0</ulink></para>
                    </listitem>

                    <listitem>
                        <para>Spécification Atom : <ulink url="http://tools.ietf.org/html/rfc4287">RFC
                        4287</ulink></para>
                    </listitem>

                    <listitem>
                        <para>Spécification WFW : <ulink url="http://wellformedweb.org/news/wfw_namespace_elements">Well
                        Formed Web</ulink></para>
                    </listitem>

                    <listitem>
                        <para>Spécification iTunes : <ulink
                        url="http://www.apple.com/itunes/store/podcaststechspecs.html">iTunes Technical
                        Specifications</ulink></para>
                    </listitem>
                </itemizedlist></para>
        </sect3>

        <sect3 id="zend.feed.importing.custom.importbuilder">
            <title>Importer une source de données personnalisée</title>

            <para>Vous pouvez créer une instance Zeed_Feed à partir de n'importe quelle source de données implémentant
            <code>Zend_Feed_Builder_Interface</code>. Vous devez juste implémenter les méthodes <code>getHeader()</code>
            et <code>getEntries()</code> pour pouvoir utiliser votre objet avec <code>Zend_Feed::importBuilder()</code>.
            Par une simple référence d'implémentation vous pouvez utiliser <code>Zend_Feed_Builder</code>, qui prend un
            tableau dans son constructeur, réalise quelques validations mineures, et peut être utilisé dans la méthode
            <code>importBuilder()</code>. La méthode <code>getHeader()</code> doit retourner une instance de
            <code>Zend_Feed_Builder_Header</code>, et <code>getEntries()</code> doit retourner un tableau d'instances
            <code>Zend_Feed_Builder_Entry</code></para>

            <note>
                <para><code>Zend_Feed_Builder</code> fournit une mise en oeuvre concrète afin de montrer l'utilisation.
                Les utilisateurs sont encouragés à faire leurs classes propres mettre en oeuvre
                <code>Zend_Feed_Builder_Interface</code>.</para>
            </note>

            <para>Voici un exemple d'utilisation de <code>Zend_Feed::importBuilder()</code> :</para>

            <programlisting role="php"><![CDATA[<?php
// importe un flux atom à partir d'un constructeur personnalisé
$atomFeedFromArray = Zend_Feed::importBuilder(new Zend_Feed_Builder($array));

// la ligne suivante est équivalente à celle ci-dessus ; par défaut l'instance Zend_Feed_Atom est retournée
$atomFeedFromArray = Zend_Feed::importArray(new Zend_Feed_Builder($array), 'atom');

// importe un flux rss à partir d'un constructeur personnalisé
$rssFeedFromArray = Zend_Feed::importArray(new Zend_Feed_Builder($array), 'rss');]]></programlisting>
        </sect3>

        <sect3 id="zend.feed.importing.custom.dump">
            <title>Décharger le contenu d'un flux</title>

            <para>Pour décharger le contenu d'une instance <code>Zend_Feed_Abstract</code>, vous pouvez utiliser les
            méthodes <code>send()</code> ou <code>saveXml().</code></para>

            <programlisting role="php"><![CDATA[<?php
assert($feed instanceof Zend_Feed_Abstract);

// décharge le flux dans l'affichage standard
print $feed->saveXML();

// envoie les entêtes et décharge le flux
$feed->send();]]></programlisting>
        </sect3>
    </sect2>
</sect1>