<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 18833 -->
<!-- Reviewed: no -->
<sect1 id="migration.110">
    <title>Zend Framework 1.10</title>

    <para>
        Lors de la migration d'un version précédente vers Zend Framework 1.10 ou plus récent
        vous devriez prendre note de ce qui suit.
    </para>

    <sect2 id="migration.110.zend.file.transfer">
        <title>Zend_File_Transfer</title>
        <sect3 id="migration.110.zend.file.transfer.count">
            <title>Count validation</title>

            <para>
                Before release 1.10 the <classname>MimeType</classname> validator used a wrong
                naming. For consistency the following constants have been changed:
            </para>

            <table id="migration.110.zend.file.transfer.count.table">
                <title>Changed Validation Messages</title>
                <tgroup cols="4">
                    <thead>
                        <row>
                            <entry>Old</entry>
                            <entry>New</entry>
                            <entry>Value</entry>
                        </row>
                    </thead>

                    <tbody>
                        <row>
                            <entry><constant>TOO_MUCH</constant></entry>
                            <entry><constant>TOO_MANY</constant></entry>
                            <entry>
                                Too many files, maximum '%max%' are allowed but '%count%' are given
                            </entry>
                        </row>

                        <row>
                            <entry><constant>TOO_LESS</constant></entry>
                            <entry><constant>TOO_FEW</constant></entry>
                            <entry>
                                Too few files, minimum '%min%' are expected but '%count%' are given
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>

            <para>
                When you are translating these messages within your code then use the new constants.
                As benefit you don't need to translate the original string anymore to get a correct
                spelling.
            </para>
        </sect3>
    </sect2>

    <sect2 id="migration.110.zend.validate">
        <title>Zend_Validate</title>

        <sect3 id="migration.110.zend.validate.selfwritten">
            <title>Adaptateurs personnels</title>

            <para>
                Lorsqu'une erreur apparait dans un adaptateur crée de toute pièce,
                <methodname>_error()</methodname> doit être appelée. Avant Zend Framework 1.10, il était
                possible d'appeler cette méthode sans aucun paramètre. Le premier template de message d'erreur
                était alors utilisé.
            </para>

            <para>
                Ce comportement est problématique lorsque vous avez des validateurs retournant plusieurs messages.
                Aussi, étendre un validateur peut mener à des comportements inattendus dans une telle situation,
                comme par exemple l'apparition du mauvais message d'erreur.
            </para>

            <programlisting language="php"><![CDATA[
My_Validator extends Zend_Validate_Abstract
{
    public isValid($value)
    {
        ...
        $this->_error(); // Résultat inattendu
        ...
    }
}
]]></programlisting>

            <para>
                Pour éviter ces problèmes <methodname>_error()</methodname> doit desormais
                prendre obligatoirement un paramètre.
            </para>

            <programlisting language="php"><![CDATA[
My_Validator extends Zend_Validate_Abstract
{
    public isValid($value)
    {
        ...
        $this->_error(self::MY_ERROR); // Ok, erreur définie
        ...
    }
}
]]></programlisting>
        </sect3>

        <sect3 id="migration.110.zend.validate.datevalidator">
            <title>Simplification dans le validateur des dates</title>

            <para>
                Avant Zend Framework 1.10, 2 messages identiques étaient envoyés dans le validateur
                des dates. <constant>NOT_YYYY_MM_DD</constant> et
                <constant>FALSEFORMAT</constant>. Depuis Zend Framework 1.10, seul
                <constant>FALSEFORMAT</constant> sera retourné lorsque la date passée ne correspond pas
                au format demandé.
            </para>
        </sect3>

        <sect3 id="migration.110.zend.validate.barcodevalidator">
            <title>Corrections dans Alpha, Alnum et Barcode</title>

            <para>
                Avant Zend Framework 1.10, les messages dans les 2 validateurs barcode, le Alpha
                et le Alnum étaient identiques. Des problèmes pouvaient alors faire surface avec des
                messages personnalisés, des traducteurs ou des instances multiples des validateurs.
            </para>

            <para>
                Depuis Zend Framework 1.10, les valeurs des constantes ont changé pour être uniques.
                Si vous utilisiez les constantes comme le manuel le recommande, aucun changement n'est nécessaire.
                Mais si vous utilisiez les messages d'erreurs, alors il faudra les changer. Voici les changements
                opérés:
            </para>

            <table id="migration.110.zend.validate.barcodevalidator.table">
                <title>Messages de validation disponibles</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>Validateur</entry>
                            <entry>Constante</entry>
                            <entry>Valeur</entry>
                        </row>
                    </thead>

                    <tbody>
                        <row>
                            <entry><classname>Alnum</classname></entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>alnumStringEmpty</entry>
                        </row>

                        <row>
                            <entry><classname>Alpha</classname></entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>alphaStringEmpty</entry>
                        </row>

                        <row>
                            <entry><classname>Barcode_Ean13</classname></entry>
                            <entry><constant>INVALID</constant></entry>
                            <entry>ean13Invalid</entry>
                        </row>

                        <row>
                            <entry><classname>Barcode_Ean13</classname></entry>
                            <entry><constant>INVALID_LENGTH</constant></entry>
                            <entry>ean13InvalidLength</entry>
                        </row>

                        <row>
                            <entry><classname>Barcode_UpcA</classname></entry>
                            <entry><constant>INVALID</constant></entry>
                            <entry>upcaInvalid</entry>
                        </row>

                        <row>
                            <entry><classname>Barcode_UpcA</classname></entry>
                            <entry><constant>INVALID_LENGTH</constant></entry>
                            <entry>upcaInvalidLength</entry>
                        </row>

                        <row>
                            <entry><classname>Digits</classname></entry>
                            <entry><constant>STRING_EMPTY</constant></entry>
                            <entry>digitsStringEmpty</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </sect3>
    </sect2>
</sect1>
